with table1 as(select p.projectId from profile_16619 p

			   
left join profile_18224 p2
on p.projectId = p2.projectId
			   
group by p.projectId
),
table2 as(select p.projectId,fac.name as factory,nvl2(SUBSTRING(ven.name, 1, POSITION(' (' in ven.name)), SUBSTRING(ven.name, 1, POSITION(' (' in ven.name)), ven.name) as vendor_name, case when vendor_name='' then ven.name else vendor_name end as vendor,cou.name as country,case when country in ('India', 'Bangladesh', 'Sri Lanka')
then 'South Asia'
when country in ('China')
then 'North Asia'
when country in ('Guatemala', 'El Salvador', 'Dominican Republic')
then 'Americas'
when country in ('Philippines', 'Cambodia',  'Vietnam',  'Indonesia', 'Myanmar')
then 'South East Asia'
end as region,case when p2.name_subunit is null or p2.name_subunit=' ' then 'N/A' else p2.name_subunit end  as unit,DATEPART(YEAR,p2.date_enrollment) as year_new,representative.name as mr_wr from profile_18224 p

left join ds_mysql_prod_project fac
on p.projectid = fac.id
left join ds_mysql_prod_project ven
on fac.parent = ven.id
left join ds_mysql_prod_project cou
on ven.parent = cou.id

left join profile_16619 p2
on p.sub_unit = p2._id

left join table1 t1 on
p.projectId = t1.projectId
			   
left join ds_mysql_prod_tagelement representative
on p.mr_wr = representative.id

where  (cou.name <> 'Test Country') and (p.projectId ilike '%%') and (t1.projectId is not null) and (p2.status = 1400365 or p2.status is null)
),
table3 as(SELECT * 
FROM (SELECT projectId,factory,vendor,country,region,year_new,unit,mr_wr,count(mr_wr ) as total 
	  
	  from table2 
	  
	  

	 group by projectId,mr_wr,factory,vendor,country,region,year_new,unit)

PIVOT (
    SUM(total) FOR mr_wr IN ('Management Representative' as m_r,'Worker Representative' as w_r,'Not answered' as n_a)
)
),
table4 as(select projectId,factory,vendor,country,region,year_new,unit,case when m_r is null then 0 else m_r end as mgmt_count,
		  case when w_r is null then 0 else w_r end as worker_count,
		  case when n_a is null then 0 else n_a end as not_answer_count,
		 (mgmt_count+worker_count+not_answer_count) as total_representatives,(mgmt_count/total_representatives) as mgmt_percent,
		  (worker_count/total_representatives) as worker_percent,
		  (not_answer_count/total_representatives) as not_answer_percent 
		  from table3
		  
)  
select * from table4

	  
	  

	 

