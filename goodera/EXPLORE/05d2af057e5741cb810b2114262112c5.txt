-- SakshiTest
-- DoNotEdit
with tab1 as (Select P.name AS projectname,p1.month_2_timerange as fy_timerange,p1.name as activity_2, t1.name as indicator, p1.value ,p1.indicator as indicatorId,
CAST(p1.month_2_timerange.start AS date) AS start
			  
from profile_56633 p1
LEFT JOIN ds_mysql_prod_project AS P
ON p1.projectid = P.id
left join profile_56634 p2
on p1.activity_2 = p2._id
left join ds_mysql_prod_tagelement t1
on t1.id = p1.indicator
			  
-- Extra conditions which were missing (Present in galaxy):			  
where indicator is not null	and indicatorId = 962282	
		-- 962282: For Saplings Planted 	  
			  
),

tab2 as (Select projectname,EXTRACT(YEAR FROM start) AS Year1,fy_timerange,activity_2,indicator,value
from tab1
group by 1,2,3,4,5,6),

tab3 as (Select indicator, [Year1], value,fy_timerange,
LAG (value,1)
OVER (PARTITION BY indicator ORDER BY [Year1]) AS PrevYearRevenue1, 
LAG (year1,1)
OVER (PARTITION BY indicator ORDER BY [Year1]) AS PrevYear 
from tab2
ORDER BY indicator, [Year1]
),

tab4 as (select indicator,year1,value,prevyearrevenue1,prevyear,fy_timerange,
		 case
		 
		-- Hardcoded 01010101 to check if previousYear exists or not
	when (year1 - prevyear = 1 and prevyear is not null) then PrevYearRevenue1
	else '01010101'
end as PrevYearRevenue2,
		 -- When previous year is null then 0 as revenue
		 case when prevyear is null then null else PrevYearRevenue2 end as PrevYearRevenue
		 from tab3
		 ORDER BY  [Year1]
),
tab5 as (

Select indicator,year1,value,prevyearrevenue,prevyear,fy_timerange,
case 
WHEN prevyearrevenue = 0 THEN NULL
 

	
  -- (CurrYearValue-PreviousYearValue)/ PreviousYearValue * 100
 when year1 is not null and prevyear is not null then ((value - prevyearrevenue)/prevyearrevenue) * 100 else 0 end as revenue,
  
  -- when data does from 0 to positive value then 100% increase
 case when prevyearrevenue = '01010101' and prevyear is not null and value > 0 then 100 else revenue end as finalrevenue,
  
  
  
  -- if year doesn't exist then -100
  case when year1-prevyear >1 then year1 -1 else null end as temp,
  --case when temp is null then null else (INSERT INTO  SakshiTest (year1,prevyear) VALUES (year1-1,'temp')) end as done,
  
  
  
  -- when data does from 0 to negative value then 100% decrease
  case when prevyearrevenue = '01010101' and prevyear is not null and value < 0 then -100 else finalrevenue end as finalrevenue1


from tab4)



select indicator,fy_timerange, year1 as year, prevyear as PreviousYear, value, finalrevenue1 as revenue1,
-- if year-prevyear >1 then 0
case when year-PreviousYear >1 then 0 else revenue1 end as revenue,
insert into SakshiTest values
(null,null,'2020',null,null,null,null);
from tab5




