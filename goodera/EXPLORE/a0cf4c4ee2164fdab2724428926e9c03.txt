with Base1 as(select fy,select_quarter,new_villages as New_added,case when _id is not null then 'New Beneficiaries Covered' end as type from profile_60787
union all
select fy,select_quarter,new_schools,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,new_students,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,new_youth,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,new_teachers,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,new_fellows,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,new_farmers,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,new_women,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,new_other,case when _id is not null then 'New Beneficiaries Covered' end as type from profile_60787
union all 
select fy,select_quarter,total_villages,case when _id is not null then 'Total Beneficiaries Covered' end as type from profile_60787
union all
select fy,select_quarter,total_schools,case when _id is not null then 'Total Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,total_students,case when _id is not null then 'Total Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,total_youth,case when _id is not null then 'Total Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,total_teachers,case when _id is not null then 'Total Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,total_fellows,case when _id is not null then 'Total Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,total_farmers,case when _id is not null then 'Total Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,total_women,case when _id is not null then 'Total Beneficiaries Covered' end as type  from profile_60787
union all
select fy,select_quarter,total_other,case when _id is not null then 'Total Beneficiaries Covered' end as type from profile_60787),
Base2 as(
select fy,case when _id is not null then 'Year' end as type1,new_villages,case when _id is not null then 'New Beneficiaries Covered' end as type from profile_60787
union all
select fy,case when _id is not null then 'Year' end as type1,new_schools,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,case when _id is not null then 'Year' end as type1,new_students,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,case when _id is not null then 'Year' end as type1,new_youth,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,case when _id is not null then 'Year' end as type1,new_teachers,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,case when _id is not null then 'Year' end as type1,new_fellows,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,case when _id is not null then 'Year' end as type1,new_farmers,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,case when _id is not null then 'Year' end as type1,new_women,case when _id is not null then 'New Beneficiaries Covered' end as type  from profile_60787
union all
select fy,case when _id is not null then 'Year' end as type1,new_other,case when _id is not null then 'New Beneficiaries Covered' end as type from profile_60787),Base3 as(select fy,New_added,type,q.name from Base1 left join  ds_mysql_prod_tagelement q on select_quarter=q.id)

select * from Base23
