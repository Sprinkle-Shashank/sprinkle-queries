with sub1 as(
select p1.*,p2.pvh_id, timeperiod_timerange, json_serialize(p3.timeperiod_timerange) as timeperiod_timerange1, p3.region
  from profile_62491 p1
left join profile_62948 p2
on p1.project_id=p2.project_id
left join profile_60928 p3
on p2.pvh_id=p3.factory_id),
  sub2 as(
	select name, fy_timerange, absenteeism, absenteeism_1, efficiency, efficiency_1, turnover, turnover_1, promotions, promotions_1, pvh_id, rtrim(ltrim(json_serialize(region),'['),']') as region, 
	first_value(timeperiod_timerange1)
over(partition by name, fy_timerange, absenteeism, absenteeism_1, efficiency, efficiency_1, turnover, turnover_1, promotions, promotions_1, pvh_id, region
order by cast(timeperiod_timerange.start as date) desc
rows between unbounded preceding and unbounded following) as timeperiod_timerange from sub1),
sub3 as(
select name, fy_timerange, absenteeism, absenteeism_1, efficiency, efficiency_1, turnover, turnover_1, promotions, promotions_1, pvh_id, region, timeperiod_timerange from sub2
 group by name, fy_timerange, absenteeism, absenteeism_1, efficiency, efficiency_1, turnover, turnover_1, promotions, promotions_1, pvh_id, region, timeperiod_timerange)
 select * from sub3
 /*,
 sub4 as(
 select fy_timerange, pvh_id, t.name as region, efficiency, extract(year from cast(timeperiod_timerange.start as date)) as year
   from sub3 
   left join ds_mysql_prod_tagelement t
   on t.id=region
 where pvh_id is not null and  efficiency is not null),
 sub5 as(
   select fy_timerange, pvh_id, region, efficiency, year, p4.year_num from sub4
   left join profile_64189 p4
   on p4.year_text=year)
   select fy_timerange, pvh_id, region, efficiency, year, year_num from sub5 where year_num>=2020*/