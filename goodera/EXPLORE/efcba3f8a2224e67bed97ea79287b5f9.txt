with temp as
(
  select 'energy_levelsachieved_verified' as col
  union all
  select 'wastewater_levelsachieved_verified' as col
  union all
  select 'ems_levelsachieved_verified' as col
  union all
  select 'chemicals_levelsachieved_verified' as col
  union all
  select 'waste_levelsachieved_verified' as col
  union all
  select 'air_levelsachieved_verified' as col
  union all
  select 'water_levels_achieved_verified' as col
  ),
sub1 as(
select group_name, groupid, surveyid, country, energy_levelsachieved_verified, wastewater_levelsachieved_verified, ems_levelsachieved_verified, chemicals_levelsachieved_verified, sq.fy_timerange, waste_levelsachieved_verified, air_levelsachieved_verified, water_levels_achieved_verified, sacid,
case col
	when 'energy_levelsachieved_verified' then sq.energy_levelsachieved_verified
	when 'wastewater_levelsachieved_verified' then sq.wastewater_levelsachieved_verified
	when 'ems_levelsachieved_verified' then sq.ems_levelsachieved_verified
	when 'chemicals_levelsachieved_verified' then sq.chemicals_levelsachieved_verified
	when 'waste_levelsachieved_verified' then sq.waste_levelsachieved_verified
	when 'air_levelsachieved_verified' then sq.air_levelsachieved_verified
	when 'water_levels_achieved_verified' then sq.water_levels_achieved_verified
  else Null
	end as level, temp.col as module
from profile_74133 sq
cross join temp
  ),
  sub2 as(
  select group_name, groupid, surveyid, country,  position(1 in level) as level1, position(2 in level) as level2, position(3 in level) as level3, module, upper(substring(module,1,position('_' in module)-1)) as modules, sacid, s1.fy_timerange
	from sub1 s1
		 where level!=' '
  group by group_name, groupid, surveyid, country,module, level, sacid, s1.fy_timerange),
  sub3 as(
  select country,s2.fy_timerange, level1, cdms_id, modules, source_div, facility_type, cr_tier
	from sub2 s2
  left join profile_74334 pd
  on pd.higg_id=s2.sacid
  left join profile_60928 mr
  on mr.factory_id=pd.cdms_id
	group by country, s2.fy_timerange, level1, cdms_id, modules, source_div, mr.facility_type, cr_tier
  ),
    sub4 as
  (
  select s3.country, s3.fy_timerange, s3.level1, s3.cdms_id, s3.modules, source, cr_tier, facility from sub3 s3, s3.source_div source, s3.facility_type facility),
    sub5 as
  (
  select t1.name as region, s4.fy_timerange, cdms_id, level1,
	listagg(distinct modules,', ') as modules, cr_tier, json_serialize(facility) as facility_type_new,
	source as source_div
  from sub4 s4
  left join ds_mysql_prod_tagelement t
	on t.id=s4.country
	left join ds_mysql_prod_tagelement t1
	on t.parent=t1.id
	  where cdms_id is not null 
	group by s4.fy_timerange, source, t1.name, cdms_id, level1, cr_tier, facility
	),
	sub6 as(
	select fy_timerange, source_div, facility_type_new, region, cdms_id, regexp_count(modules,',')+1 as mod, level1, cr_tier, 
	case 
	when position(957761 in facility_type_new)>=0 and cr_tier=957758 then 'Level 1 Tier 1'
	when position(957761 in facility_type_new)>=0 and cr_tier=957757 then 'Level 1 Tier 2'
 when position(957761 in facility_type_new)<0 and position(957762 in facility_type_new)>=0 then 'Level 2 Mills' when position(957761 in facility_type_new)<0 and position(957762 in facility_type_new)<0 and position(957763 in facility_type_new)>=0 then 'Level 2 Trim' else 'No' end as fac_type
	from sub5), 
	sub7 as
	(
	select fy_timerange, source_div, facility_type_new, cdms_id, cr_tier, region, case when mod=7 and level1=1 then 7 else level1 end as level_1, fac_type
	from sub6
	group by fy_timerange, source_div, facility_type_new, cr_tier, region, mod, level1, cdms_id, fac_type),
	sub8 as (
	select fy_timerange, source_div, facility_type_new as facility_type, s6.region, cdms_id as facs,1 as count, cr_tier, fac_type, mr.brand, level_1
	  from sub7 s6
	  left join profile_70187 mr
	  on s6.source_div=mr.business_div
	  where COALESCE(fac_type,'')!='No'
	)
	select fy_timerange, source_div, region, brand,level_1, fac_type, facs, count from sub8