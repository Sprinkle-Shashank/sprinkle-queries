with temp1 AS
(select m._id AS old_id, m.projectId, m.month_timerange, m.project_code_new, m.amount, r.project_name, r.vertical, r.focus, r.state, r.direct_or_partner, r.project_code, r.entity
 
from profile_55194 AS m
 
left join profile_62881 AS r 
 on r._id = m.project_code_new),
  
--(select m.*, q1 from temp1 as m, m.vertical as q1)
 
temp2 as
(select m.month_timerange AS fy_timerange, m.project_code_new, m.amount, m.project_name, m.vertical, focus_update.name AS focus_new , state_update.name AS state_new, m.project_code, entity_update.name AS entity_new, q.name as name_update from temp1 AS m

left join ds_mysql_prod_tagelement as state_update
  on m.state = state_update.id
  
left join ds_mysql_prod_tagelement as entity_update
  on m.entity = entity_update.id
 
left join ds_mysql_prod_tagelement as focus_update
  on m.focus = focus_update.id
 
left join profile_64961 as q
 on state.name = q.state
),
  
temp3 as
(select m.fy_timerange, m.project_code_new, m.amount, m.project_name, vertical_new, m.focus, m.state, m.project_code, m.entity, m.name from temp2 AS m, m.vertical vertical_new)


temp4 as
(
select fy_timerange, project_code_new, project_name, focus_new, entity_new, SUM(amount) AS amount, m.name_update, count(*),
case when vert.name IS NULL AND vert1.name IS NOT NULL THEN vert.name 
when vert1.name IS NULL AND vert.name IS NOT NULL THEN vert1.name
else 'Admin'
END AS vertical , 

from temp3 AS m

left join ds_mysql_prod_tagelement as vert
  on m.vertical_new = vert.id
  
left join ds_mysql_prod_tagelement as vert1
  on vert.parent = vert1.id  
 
group by m.fy_timerange, m.project_code_new, m.project_name, m.focus_new, m.entity_new, m.name_update, vertical

order by m.project_code_new asc
  )
  
  select * from temp4