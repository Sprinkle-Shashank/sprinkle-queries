with sub1 as
(select * from profile_62491 where coalesce(lg_status,0)!=1105812)
select * from sub1

/*
with sub1 as(
select sq.*, pd.pvh_id, pd.offset_date, mr.partner_type, mr.name_vendor, mr.name_vendor_filter, json_serialize(ab.source_div) as source_div, json_serialize(ab.region) as region, ab.region_parent, ab.timeperiod_timerange, cast(sq.start_date as date) as start_date, cast(pd.offset_date as date) as offset_date
from profile_62491 sq
left join profile_62948 pd
on sq.project_id=pd.project_id
left join profile_62482 mr
on mr.project_id=sq.project_id
left join profile_60928 ab
on ab.factory_id=pd.pvh_id
where coalesce(lg_status,0)!=1105812 and pd.pvh_id is not null 
  --and start_date >= nvl(offset_date,'2020-01-01')
order by ab.timeperiod_timerange desc),
sub2 as (
  select projectId, name, fy_timerange, num_females, pvh_id, partner_type, name_vendor, name_vendor_filter, first_value(source_div)
over(partition by name, fy_timerange, num_females, project_id, pvh_id, partner_type, name_vendor, name_vendor_filter
order by cast(timeperiod_timerange.start as date) desc
rows between unbounded preceding and unbounded following) as source_div_new, 
	first_value(region)
over(partition by name, fy_timerange, num_females, project_id, pvh_id, partner_type, name_vendor, name_vendor_filter
order by cast(timeperiod_timerange.start as date) desc
rows between unbounded preceding and unbounded following) as region_new
from sub1 ), 
sub3 as (
select projectId, name, fy_timerange, num_females, pvh_id, partner_type, name_vendor, name_vendor_filter, source_div_new, region_new from sub2
group by projectId, name, fy_timerange, num_females, pvh_id, partner_type, name_vendor, name_vendor_filter, source_div_new, region_new)
select * from sub1*/