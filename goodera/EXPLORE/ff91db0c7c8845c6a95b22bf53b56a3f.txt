
with table1 as
(
  select pro.name as projectId,ngo.name as ngo ,schedule_7, location , local.name as local_yn,impdir.name as imp_direct, project_start_date  , csr_reg_num , ong.name as ongoing, project_end_date, p.fy_timerange  ,
concat(
  
	concat(concat(extract (day from project_start_date ),'-'), 
 			concat(extract (month from  project_start_date ),'-')),
	concat(concat(concat(extract( year from project_start_date ),
						    concat(' ',concat('to',' '))),
				  concat(extract (day from project_end_date),'-')),
		   concat(concat(extract(month from project_end_date),'-'),
                  extract (year from project_end_date )))) 
				  
as duration ,  projectid_dkl , INITCAP(ent.name) as entity , cumulative , cumulative_allocated , p.title
from profile_80433  p
 
left join ds_mysql_prod_tagelement ent 
on p.entity = ent.id

left join ds_mysql_prod_tagelement local
on p.local_yn = local.id

left join ds_mysql_prod_tagelement impdir
on p.imp_direct = impdir.id

left join ds_mysql_prod_tagelement ong 
on p.ongoing = ong.id

left join ds_mysql_prod_project pro 
on p.projectId = pro.id

left join ds_mysql_prod_project ngo 
on pro.parent = ngo.id
  ),
  
  
table2 as 
 ( select *  from table1 as p , p.location as d1 , p.schedule_7 as d2 ),
 
 table3 as 
 ( select projectId , ngo , local_yn , imp_direct , project_start_date , csr_reg_num , ongoing , project_end_date , fy_timerange , duration , projectid_dkl , entity , cumulative , cumulative_allocated 
  ,  listagg(distinct sche.name, ' , ') as schedule_7_update , listagg(distinct state.name, ' , ') as state_update , listagg(distinct city.name , ' , ') as city_update , p.title
  from table2 as p
  
left join ds_mysql_prod_tagelement sche
on p.d2 = sche.id
  
left join ds_mysql_prod_tagelement city
on  p.d1 = city.id
  
left join ds_mysql_prod_tagelement state
on city.parent = state.id
  
   
  group by projectId , ngo , local_yn , imp_direct , project_start_date , csr_reg_num , ongoing , project_end_date , fy_timerange , duration , projectid_dkl , entity , cumulative , cumulative_allocated ,  p.title 
  )
  
  
 select * from table3 where ongoing='Yes'  order by fy_timerange desc
