with sub1 as(
  select name, fy_timerange, extract(month from cast(startdate as date)) as start_month, 
  extract(year from cast(startdate as date)) as start_year,
  case
		  when start_month = 1 then 'Jan'
		  when start_month = 2 then 'Feb'
		  when start_month = 3 then 'Mar'
		  when start_month = 4 then 'Apr'
		  when start_month = 5 then 'May'
		  when start_month = 6 then 'Jun'
		  when start_month = 7 then 'Jul'
		  when start_month = 8 then 'Aug'
		  when start_month = 9 then 'Sep'
		  when start_month = 10 then 'Oct'
		  when start_month = 11 then 'Nov'
		  when start_month = 12 then 'Dec'
		  else NULL
	end as month_new,
		  
  sum(case
	  	when keyword = 'diesel_emission' then datanumBase
	  	else 0 
	  end) as diesel_emission,
  sum(case
	  	when keyword = 'fo_emission' then datanumBase
	  	else 0 
	  end) as fo_emission,
  sum(case
	  	when keyword = 'biomass_emission' then datanumBase
	  	else 0 
	  end) as biomass_emission,
  sum(case
	  	when keyword = 'lpg_canteen_emission' then datanumBase
	  	else 0 
	  end) as lpg_canteen_emission,
  sum(case
	  	when keyword = 'edc_emssion' then datanumBase
	  	else 0 
	  end) as edc_emssion,
  sum(case
	  	when keyword = 'xylene_emission' then datanumBase
	  	else 0 
	  end) as xylene_emission,
  sum(case
	  	when keyword = 'dek_emission' then datanumBase
	  	else 0 
	  end) as dek_emission,
  sum(case
	  	when keyword = 'cyclohexane_emission' then datanumBase
	  	else 0 
	  end) as cyclohexane_emission,
  sum(case
	  	when keyword = 'methanol_emission' then datanumBase
	  	else 0 
	  end) as methanol_emission,
  sum(case
	  	when keyword = 'toluene_emission' then datanumBase
	  	else 0 
	  end) as toluene_emission,
  sum(case
	  	when keyword = 'mdc_emission' then datanumBase
	  	else 0 
	  end) as mdc_emission,
  sum(case
	  	when keyword = 'soda_ash_emission' then datanumBase
	  	else 0 
	  end) as soda_ash_emission,
  sum(case
	  	when keyword = 'paper_emission' then datanumBase
	  	else 0 
	  end) as paper_emission,
  sum(case
	  	when keyword = 'enamel_paint_emission' then datanumBase
	  	else 0 
	  end) as enamel_paint_emission,
  sum(case
	  	when keyword = 'diesel_vehicle_emission' then datanumBase
	  	else 0 
	  end) as diesel_vehicle_emission,
  sum(case
	  	when keyword = 'cng_vehicle_emission' then datanumBase
	  	else 0 
	  end) as cng_vehicle_emission,
  sum(case
	  	when keyword = 'electricity_emission' then datanumBase
	  	else 0 
	  end) as electricity_emission,
  sum(case
	  	when keyword = 'diesel_buses_emission' then datanumBase
	  	else 0 
	  end) as diesel_buses_emission,
  sum(case
	  	when keyword = 'cng_buses_emission' then datanumBase
	  	else 0 
	  end) as cng_buses_emission,
  sum(case
	  	when keyword = 'total_tech_production' then datanumBase
	  	else 0 
	  end) as total_tech_production,
  sum(case
	  	when keyword = 'total_production' then datanumBase
	  	else 0 
	  end) as total_production,
  sum(case
	  	when keyword = 'water_cons_gidc' then datanumBase
	  	else 0 
	  end) as water_cons_gidc,
  sum(case
	  	when keyword = 'electricity_consumption' then datanum
	  	else 0 
	  end) as electricity_consumption,
  sum(case
	  	when keyword = 'total_hazardous_waste' then datanumBase
	  	else 0 
	  end) as total_hazardous_waste,
  sum(case
	  	when keyword = 'liquid_hazardous_waste' then datanumBase
	  	else 0 
	  end) as liquid_hazardous_waste,
  sum(case
	  	when keyword = 'total_solvent_loss' then datanumBase
	  	else 0 
	  end) as total_solvent_loss,
  sum(case
	  	when keyword = 'renenwable_energy_utilized' then datanum
	  	else 0 
	  end) as renenwable_energy_utilized,
  sum(case
	  	when keyword = 'company_vehicle_cng_kgs_emission' then datanumBase
	  	else 0 
	  end) as company_vehicle_cng_emission,
  
  (month_new||' ('||start_year||')') as month_year
  from sus_78682
  --where name = 'Ankleshwar'
  group by name, fy_timerange, startdate),
  
sub2 as(
  select name, s1.fy_timerange, s1.month_year,

(s1.dms_hexa_emission + s1.edc_hexa_emission + s1.dmf_hexa_emission + s1.methanol_emission + s1.mdcb_hexa_emission + s1.odcb_pekk_emission + s1.hexane_pekk_emission + s1.dpo_pekk_emission + s1.methanol_pekk_emission + s1.xylidine_emission + s1.mdmpa_emission + s1.dipa_lambda_emission + s1.toluene_aceta_emission + s1.hexane_lambda_emission + s1.xylene_km_emission + s1.tea_km_emission + s1.toluene_metco_emission + s1.ech_metco_emission + s1.heptane_tvcp_emission + s1.mdc_metalaxyl_emission +
s1.mdc_utility_emission) as total_solvent_emission,

(s1.diesel_emission + s1.fo_emission + s1.natural_gas_emission + total_solvent_emission + s1.paper_emission + s1.enamel_paint_emission + s1.company_vehicle_diesel_emission + s1.company_vehicle_cng_emission) as scope1,

s1.electricity_emission as scope2,

(s1.shift_buses_diesel_emission	+ s1.shift_buses_cng_emission) as scope3,

(scope1 + scope2 + scope3) as total_co2_emission,

(s1.total_techmt - s1.acetamiprid) as tech_production,

(total_co2_emission / NULLIF(tech_production, 0)) as total_co2_tech_production,

(total_co2_emission / NULLIF(s1.total_production, 0)) as total_co2_total_production,

(s1.water_cons_gidc / NULLIF(s1.total_techmt, 0)) as water_tech_production,

((s1.water_cons_gidc + s1.water_constanker) / NULLIF(s1.total_production, 0)) as water_total_production,

((s1.electricity) / NULLIF(s1.total_production, 0)) as electricity_total_production,

((s1.hazardous_waste_solid + s1.land_fill) / NULLIF(s1.total_production, 0)) as hw_total_production,

(s1.total_solvent_loss / NULLIF(s1.total_production, 0)) as solvent_loss_total_production,

(s1.natural_gas_consumption / NULLIF(s1.total_production, 0)) as natural_gas_total_production,

(s1.total_renewable_energy_utilization) as total_renewable_energy_utilization	

from sub1 s1),
  