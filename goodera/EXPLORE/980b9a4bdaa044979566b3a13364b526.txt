with table1 as
(
  select p.projectid , p._id , cou.name as country_1 , fac_c_i.name as fac_c_i_1 , vendor_n_i.name as vendor_n_i_1 , primary_category_id.name as primary_category_id_1  from profile_52810 as p
  
  left join ds_mysql_prod_tagelement cou on 
  p.country = cou.id 
  
  left join ds_mysql_prod_tagelement fac_c_i on
  p.fac_cl_vpid = fac_c_i.id
  
  left join ds_mysql_prod_tagelement vendor_n_i on
  p.vendor_ngo_id = vendor_n_i.id
  
  left join ds_mysql_prod_tagelement primary_category_id on
  p.primary_category = primary_category_id.id 
  
  ),
  
  table2 as 
	(
	  select p.projectid , listagg(primary_category_id_1) as primary_category_id_1 from table1 p 
	  
	  group by  p.projectid  
	  ),
	 
  
	  table4 as 
	  (
		 select p.projectid , p._id ,country_1 , row_number() over 
(partition by p.projectid
 order by p._id desc) as row from table1 p 
	  ), 
	  table5 as 
	  (
	select * from table4 where row=1 
		),
		

	 table6 as 
	 (
	    select p.projectid , p._id ,fac_c_i_1 , row_number() over 
(partition by p.projectid
 order by p._id desc) as row from table1 p 
	  ),
	  table7 as 
	  ( 
	select * from table6 where row=1 
		),
		
		
	table8 as 
	 (
	    select p.projectid , p._id , vendor_n_i_1 , row_number() over 
(partition by p.projectid
 order by p._id desc) as row from table1 p 
	  ),
	  table9 as 
	  (
	select * from table8 where row=1 
		),
		
		
		table11 as 
		(
		  select p4.projectid , p4._id ,  p4.date, p4.single_multi, p4.responsible_person , sing.name as single_multi_update from profile_61498 p4 
		
left join ds_mysql_prod_project sing
on p4.single_multi = sing.name
		),
		
		table12 as
		(
		  select p.projectid , p._id ,  p.num_males, p.num_females, p.num_total from profile_63398 as p
		  ),
	  
	
  table3 as
  (
select p.projectid , fac.name as factory_name, ven.name as vendor, cou.name as country , t5.country_1 , t7.fac_c_i_1 , t9.vendor_n_i_1 , t2.primary_category_id_1 , sum(p3.num_supervisors) , sum(p3.total_employed) , avg(p3.saturation) , position('(' in vendor) as position , case when position<1 then len(vendor) else position end as position_update , substring(ven.name , 0 , position_update) as vendor_name , case when vendor_name is null then vendor else vendor_name end as vendor_1 , p4.date, p4.single_multi, p4.responsible_person , p4.single_multi_update ,  p5.num_males, p5.num_females, p5.num_total , to_char(date_1 ,'DD-MM-YYYY') as date,  p7.male_certified, p7.female_certified from profile_64075 p

left join ds_mysql_prod_project fac
on  p.projectid = fac.id

left join ds_mysql_prod_project ven
on fac.parent = ven.id

left join ds_mysql_prod_project cou
on ven.parent = cou.id
	
left join table2 t2 on 
p.projectid = t2.projectid
	
left join table5 t5 on 
p.projectid = t5.projectid
	
left join table7 t7 on 
p.projectid = t7.projectid
	
left join table9 t9 on 
p.projectid = t9.projectid
	
left join profile_65283 p3 on 
p.projectid = p3.projectid
	
left join table11 p4 on 
p.training_id = p4._id
	
left join profile_63398 p5 on 
p.projectid = p5.projectid
	
left join profile_61483 p7 on 
p.projectid  = p7.projectid 
	
	where vendor ilike '%vendor:%'

	group by  p._id, p.projectId, p.remarks, p.name, training_id, p.project_name, p.trainer_org, p.date_1, p.date, p.num_female, p.num_male, p.prospect_female, p.total_supervisors, p.total_other_participants, p.prospect_total, p.prospect_male, vendor , t5.country_1 , t7.fac_c_i_1 , t9.vendor_n_i_1 , t2.primary_category_id_1 , cou.name , ven.name , fac.name , vendor_name , vendor_1 , p4.date, p4.single_multi, p4.responsible_person , p4.single_multi_update ,  p5.num_males, p5.num_females, p5.num_total , date , p7.male_certified, p7.female_certified 
	
	)
	
	select * from table3
	
	
/*
single_multi, responsible_person, training_type, remarks 
*/
	
	  
