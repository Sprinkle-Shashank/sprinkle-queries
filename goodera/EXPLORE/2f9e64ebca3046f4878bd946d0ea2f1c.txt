with base0 as(
select p._id, task.status, json_serialize(decode(task.approvalLog,null,'[]',task.approvalLog)) as app_status, task.profileinstanceid, p.projectid,p.fy, p.month from taskresp_54963 task
  left join profile_54963 p on p._id=task.profileinstanceid
  where task.status in ('PENDING_APPROVAL','SUBMITTED') and task.subcat_output is not null
),

base1 as(
select task._id, task.status,
	case when task.app_status like '%APPROVED%' and task.status='PENDING_APPROVAL' then 1 else 0 end as first_approval, task.app_status, task.profileinstanceid, proj1.name as projectid, split_part(proj1.name,'|',1) as project_code, decode(proj1.parent,18943, split_part(proj1.name,'|',2),split_part(proj1.name,'|',4)) as project_name, tag1.name as fy1, decode(proj1.parent,18943,proj1.id,proj1.parent) as parent, tag4.name as month from base0 task
  left join ds_mysql_prod_project proj1 on task.projectid=proj1.id
  left join ds_mysql_prod_tagelement tag1 on task.fy=tag1.id
  left join ds_mysql_prod_tagelement tag4 on task.month=tag4.id
 
  
),
  
base1b as(
select p._id, p.projectid, p.project_code, p.project_name, p.fy1, split_part(proj2.name,'|',1) as parent_code, p2.project_manager as project_manager_p2,  tag2.name as fy_p2, p3.project_manager as project_manager_p3, tag3.name as fy_p3, p.month, p.first_approval, p.profileinstanceid, p.status from base1 p
  left join ds_mysql_prod_project proj2 on p.parent=proj2.id
  left join profile_27396 p2 on split_part(proj2.name,'|',1) = p2.name
  left join profile_27420 p3 on p3.project_code = p2._id
  left join ds_mysql_prod_tagelement tag2 on p2.fy=tag2.id
  left join ds_mysql_prod_tagelement tag3 on p3.fy=tag3.id
  
  
),

base2 as(
select case when p.fy_p3 is null or p.fy_p3='' or split_part(p.fy1,'-',1)<split_part(p.fy_p3,'-',1) then p.fy_p2 else p.fy_p3 end as fy_p3 ,decode(p.project_manager_p3,null,p.project_manager_p2,p.project_manager_p3) as project_manager_p3, p.first_approval, p.profileinstanceid, p.status,  
p.project_code, p.project_name, p.projectid, p.month, p.fy1, p.project_manager_p2,p.fy_p2, p._id from base1b p 
),

base2b as(
select fy_p3, project_manager_p3, 
case when split_part(p.fy_p3,'-',1)<=split_part(p.fy1,'-',1) or split_part(p.fy_p2,'-',1)<=split_part(p.fy1,'-',1) then 1 else 0 end as flag, p.first_approval, p.profileinstanceid, p.status, 
p.project_code, p.project_name, p.projectid, p.month, p.fy1, p.project_manager_p2,p.fy_p2, p._id from base2 p 
),

base3 as(
select p.* from base2b p where flag=1 order by p.fy_p3 desc
),

base4 as(
select *, row_number() over(partition by _id) as row_num from base3
),

base5 as(
select * from base4 where row_num=1
),

base6 as(
select p.*, case when p.fy_p3<=p.fy1 then p.project_manager_p3 else p.project_manager_p2 end as project_manager from base5 p
),

base6b as(
select p.profileinstanceid as _id, p.project_code, p.project_name, p.project_manager, decode(p.status,'SUBMITTED',1,0) as approved2nd, case when p.status='PENDING_APPROVAL' and p.first_approval=1 then 1 else 0 end as approved1st, p.fy1,  case when p.status='PENDING_APPROVAL' and p.first_approval=0 then 1 else 0 end as pending1st, p.month from base6 p
),

base7 as(
select p.fy1 as fy_timerange, p.project_code, p.project_name, tag1.name as project_manager, listagg(distinct p.month,', ') as month, sum(approved2nd) as approved2nd, sum(approved1st) as approved1st , sum(pending1st) as pending1st, sum(1) as activities_reported from base6b p
  left join ds_mysql_prod_tagelement tag1 on p.project_manager=tag1.id
  group by 1,2,3,4
 /* (
	select first_value(p.fy1) over (partition by p.project_code, p.project_name, p.project_manager) as fy_timerange, first_value(p.projectid) over (partition by p.project_code, p.project_name, p.project_manager) as projectid,p.project_code, p.project_name, tag1.name as project_manager,p._id, p.month from base6 p
	left join ds_mysql_prod_tagelement tag1 on p.project_manager=tag1.id
  ) as p*/
  
),

base8 as(
select p.fy_timerange, p.project_code, p.project_name, p.project_manager, p.month, p.activities_reported, (p.approved1st+p.approved2nd) as approved1st, p.pending1st, p.approved2nd, p.approved1st as pending2nd from base7 p
),



-----********************************************************************************************************------
-----********************************************************************************************************------
-----********************************************************************************************************------



base21 as(
select p._id, proj1.name as projectid, split_part(proj1.name,'|',1) as project_code, decode(proj1.parent,18943, split_part(proj1.name,'|',2),split_part(proj1.name,'|',4)) as project_name, tag1.name as fy1, decode(proj1.parent,18943,proj1.id,proj1.parent) as parent, tag4.name as month from profile_54963 p
  left join ds_mysql_prod_project proj1 on p.projectid=proj1.id
  left join ds_mysql_prod_tagelement tag1 on p.fy=tag1.id
  left join ds_mysql_prod_tagelement tag4 on p.month=tag4.id
  
),
  
base21b as(
select p._id, p.projectid, p.project_code, p.project_name, p.fy1, split_part(proj2.name,'|',1) as parent_code, p2.project_manager as project_manager_p2,  tag2.name as fy_p2, p3.project_manager as project_manager_p3, tag3.name as fy_p3, p.month from base21 p
  left join ds_mysql_prod_project proj2 on p.parent=proj2.id
  left join profile_27396 p2 on split_part(proj2.name,'|',1) = p2.name
  left join profile_27420 p3 on p3.project_code = p2._id
  left join ds_mysql_prod_tagelement tag2 on p2.fy=tag2.id
  left join ds_mysql_prod_tagelement tag3 on p3.fy=tag3.id
  
  
),

base22 as(
select case when p.fy_p3 is null or p.fy_p3='' or split_part(p.fy1,'-',1)<split_part(p.fy_p3,'-',1) then p.fy_p2 else p.fy_p3 end as fy_p3 ,decode(p.project_manager_p3,null,p.project_manager_p2,p.project_manager_p3) as project_manager_p3,  
p.project_code, p.project_name, p.projectid, p.month, p.fy1, p.project_manager_p2,p.fy_p2, p._id from base21b p 
),

base22b as(
select fy_p3, project_manager_p3, 
case when split_part(p.fy_p3,'-',1)<=split_part(p.fy1,'-',1) or split_part(p.fy_p2,'-',1)<=split_part(p.fy1,'-',1) then 1 else 0 end as flag, 
p.project_code, p.project_name, p.projectid, p.month, p.fy1, p.project_manager_p2,p.fy_p2, p._id from base22 p 
),

base23 as(
select p.* from base22b p where flag=1 order by p.fy_p3 desc
),

base24 as(
select *, row_number() over(partition by _id) as row_num from base23
),

base25 as(
select * from base24 where row_num=1
),

base26 as(
select p.*, case when p.fy_p3<=p.fy1 then p.project_manager_p3 else p.project_manager_p2 end as project_manager from base25 p
),

base27 as(
select p.fy1 as fy_timerange, p.projectid, p.project_code, p.project_name, tag1.name as project_manager, listagg(distinct p.month,', ') as month, sum(1) as activities_planned from base26 p
  left join ds_mysql_prod_tagelement tag1 on p.project_manager=tag1.id
  group by 1,2,3,4,5
 /* (
	select first_value(p.fy1) over (partition by p.project_code, p.project_name, p.project_manager) as fy_timerange, first_value(p.projectid) over (partition by p.project_code, p.project_name, p.project_manager) as projectid,p.project_code, p.project_name, tag1.name as project_manager,p._id, p.month from base6 p
	left join ds_mysql_prod_tagelement tag1 on p.project_manager=tag1.id
  ) as p*/
  
),

final as(
select p.fy_timerange, p.project_code, p.project_name, p.project_manager, p.month, q.activities_planned, p.activities_reported, p.approved1st, p.pending1st, p.approved2nd, p.pending2nd from base27 q
left join base8 p on p.fy_timerange=q.fy_timerange and p.project_code=q.project_code and p.project_name=q.project_name
group by 1,2,3,4,5,6,7,8,9,10,11
  )
  
  select * from final f
