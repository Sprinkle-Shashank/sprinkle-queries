WITH table1 as (
 
  Select SUM(1) as recordcount,p.projectid , p.sub_unit , quarter , fy ,
  --start
  area_grievance , total_raised , rights_based,interest_based,resolved,repeated,
  total_raised_2,rights_based_2,interest_based_2,resolved_2,repeated_2,
  total_raised_3,rights_based_3,interest_based_3,resolved_3,repeated_3,
  total_raised_4,rights_based_4,interest_based_4,resolved_4,repeated_4,
  total_raised_5,rights_based_5,interest_based_5,resolved_5,repeated_5,
  total_raised_6,rights_based_6,interest_based_6,resolved_6,repeated_6,
  total_raised_7,rights_based_7,interest_based_7,resolved_7,repeated_7,
  total_raised_8,rights_based_8,interest_based_8,resolved_8,repeated_8,
  total_raised_9,rights_based_9,interest_based_9,resolved_9,repeated_9,
  hr_personnel,complaint_box,bc_members,production_personnel,worker_surveys,helpline,external_parties,others,total_raised_channels,
  
  --end
  
  
  fac.name as factory , case when nvl2(SUBSTRING(ven.name, 1, POSITION(' (' in ven.name)), SUBSTRING(ven.name, 1, POSITION(' (' in ven.name)), ven.name)='' then ven.name else nvl2(SUBSTRING(ven.name, 1, POSITION(' (' in ven.name)), SUBSTRING(ven.name, 1, POSITION(' (' in ven.name)), ven.name) end as vendor , cou.name as country , p10.factory_id as facility_id , p12.vpid as vpid  , p13.name_subunit as new_sub , p13.status as status , p13.date_enrollment , p13.date_completion , p13.sub_unit as sub_unit_new  
  from profile_16863 p
  left join ds_mysql_prod_project fac
on  p.projectid = fac.id

left join ds_mysql_prod_project ven
on fac.parent = ven.id

left join ds_mysql_prod_project cou
on ven.parent = cou.id
  
left join profile_4722 p10
on p.projectid = p10.projectid
  

left join profile_4718 p12
on p.projectid = p12.projectid
  
left join profile_16619 p13
on p.sub_unit = p13._id
 
  
where cou.id != 13761
  

  
/*
  (2*(workers_exited)/(last_day_workers+day_1_workers)) AS workturnover , 
 
(workturnover*100/count) as workturnoverratio 
  
*/
  
  
/*LEFT JOIN tagelement_1137 sta
on p.status = sta.id*/
  
  GROUP BY p.projectid , p.sub_unit , quarter , fy ,
  fac.name , ven.name , cou.name ,  facility_id  , vpid  , p13.name_subunit , p13.date_enrollment , p13.status , p13.date_completion,
  p13.sub_unit,
  --start
 area_grievance , total_raised , rights_based,interest_based,resolved,repeated,
  total_raised_2,rights_based_2,interest_based_2,resolved_2,repeated_2,
  total_raised_3,rights_based_3,interest_based_3,resolved_3,repeated_3,
  total_raised_4,rights_based_4,interest_based_4,resolved_4,repeated_4,
  total_raised_5,rights_based_5,interest_based_5,resolved_5,repeated_5,
  total_raised_6,rights_based_6,interest_based_6,resolved_6,repeated_6,
  total_raised_7,rights_based_7,interest_based_7,resolved_7,repeated_7,
  total_raised_8,rights_based_8,interest_based_8,resolved_8,repeated_8,
  total_raised_9,rights_based_9,interest_based_9,resolved_9,repeated_9,
  hr_personnel,complaint_box,bc_members,production_personnel,worker_surveys,helpline,external_parties,others,total_raised_channels
  
  --end
  
),
Table2 as (
  
  Select factory , vendor , country , facility_id , new_sub , t1.name as quarter , t2.name as fy  ,recordcount,
 coalesce(t3.name,'0') as status_update  , t4.name as sub_unit_1 , CASE WHEN sub_unit_1 ='' or  sub_unit_1 is NULL then 'No' Else sub_unit_1 END AS multiple_bc_final,
  cast(p.date_enrollment as date) as date_enrollment_update , cast(p.date_completion as date) as date_completion_update , extract(year from date_enrollment_update) as wcp_start_year, case when status_update='0' and date_enrollment is not null and date_completion is null then 'Ongoing'  when status_update='0' and date_enrollment is not null and date_completion is not null then 'completed' else status_update end as wcp_status , date_enrollment ,  date_completion , area_grievance , 
  -- For management process
  CASE when total_raised is not null  then rights_based ELSE 0 end as num_right_griev_management_process_final ,
  CASE when total_raised is not null  then interest_based ELSE 0 end as num_interest_griev_management_process_final ,
  CASE when total_raised is not null  then total_raised ELSE 0 end as num_total_griev_management_process_final ,
  CASE when total_raised is not null  then resolved ELSE 0 end as num_resolved_griev_management_process_final,
  CASE when total_raised is not null  then repeated ELSE 0 end as num_repeated_griev_management_process_final,
  
  --Open array for logic
  --for wages
   CASE when total_raised is not null  then rights_based_2 ELSE 0 end as num_right_griev_management_process_final_for_wages,
  CASE when total_raised is not null  then interest_based_2 ELSE 0 end as num_interest_griev_management_process_final_for_wages,
  CASE when total_raised is not null  then total_raised_2 ELSE 0 end as num_total_griev_management_process_final_for_wages,
  CASE when total_raised is not null  then resolved_2 ELSE 0 end as num_resolved_griev_management_process_final_for_wages,
  CASE when total_raised is not null  then repeated_2 ELSE 0 end as num_repeated_griev_management_process_final_for_wages,
  
  
 --for benefits
   CASE when total_raised is not null  then rights_based_3 ELSE 0 end as num_right_griev_management_process_final_for_benefits,
  CASE when total_raised is not null  then interest_based_3 ELSE 0 end as num_interest_griev_management_process_final_for_benefits,
  CASE when total_raised is not null  then total_raised_3 ELSE 0 end as num_total_griev_management_process_final_for_benefits,
  CASE when total_raised is not null  then resolved_3 ELSE 0 end as num_resolved_griev_management_process_final_for_benefits,
  CASE when total_raised is not null  then repeated_3 ELSE 0 end as num_repeated_griev_management_process_final_for_benefits,
  
  --for working hours
   CASE when total_raised is not null  then rights_based_4 ELSE 0 end as num_right_griev_management_process_final_for_wh,
  CASE when total_raised is not null  then interest_based_4 ELSE 0 end as num_interest_griev_management_process_final_for_wh,
  CASE when total_raised is not null  then total_raised_4 ELSE 0 end as num_total_griev_management_process_final_for_wh,
  CASE when total_raised is not null  then resolved_4 ELSE 0 end as num_resolved_griev_management_process_final_for_wh,
  CASE when total_raised is not null  then repeated_4 ELSE 0 end as num_repeated_griev_management_process_final_for_wh,
  
  --for safety
  CASE when total_raised is not null  then rights_based_5 ELSE 0 end as num_right_griev_management_process_final_for_safety,
  CASE when total_raised is not null  then interest_based_5 ELSE 0 end as num_interest_griev_management_process_final_for_safety,
  CASE when total_raised is not null  then total_raised_5 ELSE 0 end as num_total_griev_management_process_final_for_safety,
  CASE when total_raised is not null  then resolved_5 ELSE 0 end as num_resolved_griev_management_process_final_for_safety,
  CASE when total_raised is not null  then repeated_5 ELSE 0 end as num_repeated_griev_management_process_final_for_safety,
  
  --for welfare
  CASE when total_raised is not null  then rights_based_6 ELSE 0 end as num_right_griev_management_process_final_for_welfare,
  CASE when total_raised is not null  then interest_based_6 ELSE 0 end as num_interest_griev_management_process_final_for_welfare,
  CASE when total_raised is not null  then total_raised_6 ELSE 0 end as num_total_griev_management_process_final_for_welfare,
  CASE when total_raised is not null  then resolved_6 ELSE 0 end as num_resolved_griev_management_process_final_for_welfare,
  CASE when total_raised is not null  then repeated_6 ELSE 0 end as num_repeated_griev_management_process_final_for_welfare,
  
  -- for relation 
  CASE when total_raised is not null  then rights_based_7 ELSE 0 end as num_right_griev_management_process_final_for_relation,
  CASE when total_raised is not null  then interest_based_7 ELSE 0 end as num_interest_griev_management_process_final_for_relation,
  CASE when total_raised is not null  then total_raised_7 ELSE 0 end as num_total_griev_management_process_final_for_relation,
  CASE when total_raised is not null  then resolved_7 ELSE 0 end as num_resolved_griev_management_process_final_for_relation,
  CASE when total_raised is not null  then repeated_7 ELSE 0 end as num_repeated_griev_management_process_final_for_relation,
  
  --discipline
  
  CASE when total_raised is not null  then rights_based_8 ELSE 0 end as num_right_griev_management_process_final_for_discipline,
  CASE when total_raised is not null  then interest_based_8 ELSE 0 end as num_interest_griev_management_process_final_for_discipline,
  CASE when total_raised is not null  then total_raised_8 ELSE 0 end as num_total_griev_management_process_final_for_discipline,
  CASE when total_raised is not null  then resolved_8 ELSE 0 end as num_resolved_griev_management_process_final_for_discipline,
  CASE when total_raised is not null  then repeated_8 ELSE 0 end as num_repeated_griev_management_process_final_for_discipline,
  
  --Others
  CASE when total_raised is not null  then rights_based_9 ELSE 0 end as num_right_griev_management_process_final_for_others,
  CASE when total_raised is not null  then interest_based_9 ELSE 0 end as num_interest_griev_management_process_final_for_others,
  CASE when total_raised is not null  then total_raised_9 ELSE 0 end as num_total_griev_management_process_final_for_others,
  CASE when total_raised is not null  then resolved_9 ELSE 0 end as num_resolved_griev_management_process_final_for_others,
  CASE when total_raised is not null  then repeated_9 ELSE 0 end as num_repeated_griev_management_process_final_for_others,
  
  hr_personnel/recordcount as total_hr_grievence ,
  complaint_box/recordcount as total_complaint_box , 
  bc_members/recordcount  as total_bc_members,
  production_personnel/recordcount as total_production_personel,
  worker_surveys/recordcount  as total_worker_surveys,
  helpline/recordcount  as total_helpline,
  external_parties/recordcount as total_external_parties,
  others/recordcount as total_other_records,
  total_raised_channels/recordcount as total_record_channels_final
  
  
  
  
  
  
  
  
  
  
  
  
  
  from table1 p

 LEFT join tagElement_1137 as t1
  on p.quarter =t1.id
 LEFT join tagElement_1137 as t2
  on p.fy =t2.id
 LEFT join tagElement_1137 as t3
  on p.status =t3.id
 LEFT join tagElement_1137 as t4
  on p.sub_unit_new =t4.id

)
  
  Select * from table1