with s as (SELECT 
KPI._id,
KPI.indicator,
T.name AS type,
--P1.name AS projectid,
P1.name AS projectname,
P2.name AS partner,
P3.name AS projectcategory,
P4.name AS vertical,
NVL(RY.value, RHY.value, RQ.value) AS progress,
NVL(TY.value, THY.value, TQ.value) AS target,
NVL(RY.remarks, RHY.remarks, RQ.remarks) AS remarks,
NVL (RY.fy_timerange, RHY.fy_timerange, RQ.fy_timerange) AS fy_timerange,
(progress - target) AS variance

FROM profile_80301 AS KPI

LEFT JOIN profile_80302 AS RY
ON KPI._id = RY.indicator

LEFT JOIN profile_80304 AS RHY
ON KPI._id = RHY.indicator

LEFT JOIN profile_80305 AS RQ
ON KPI._id = RQ.indicator

LEFT JOIN profile_80401 AS TY
ON KPI._id = TY.indicator

LEFT JOIN profile_80402 AS THY
ON KPI._id = THY.indicator

LEFT JOIN profile_80403 AS TQ
ON KPI._id = TQ.indicator

LEFT JOIN ds_mysql_prod_tagelement AS T
ON KPI.type = T.id

LEFT JOIN ds_mysql_prod_project AS P1
ON KPI.projectid = P1.id

LEFT JOIN ds_mysql_prod_project AS P2
ON P1.parent = P2.id

LEFT JOIN ds_mysql_prod_project AS P3
ON P2.parent = P3.id

LEFT JOIN ds_mysql_prod_project AS P4
ON P3.parent = P4.id

GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
 )
 Select _id,
indicator,
 type,
 projectname,
 partner,
 projectcategory,
vertical,
progress,
 target,
 remarks,
 fy_timerange,
 variance
 from s
 group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12
/*
with s as 
(Select t.name as projectid,('FY'||substring(EXTRACT(YEAR FROM(CAST(startdate AS datetime))),3,2)||'-'||substring(EXTRACT(YEAR FROM(CAST(startdate AS datetime)))+1,3,2) ) as year, datatablebase, questiontext,
 extract(Month from cast(startdate as datetime) )as Monthh,
case 
  when monthh=01 then 'January'
  when monthh=02 then 'February'
  when monthh=03 then 'March'
  when monthh=04 then 'April'
  when monthh=05 then 'May'
  when monthh=06 then 'June'
  when monthh=07 then 'July'
  when monthh=08 then 'August'
  when monthh=09 then 'September'
  when monthh=10 then 'October'
  when monthh=11 then 'November'
  when monthh=12 then 'December'
  end as month,
  case 
	when month='January' then 'Q4'
	when month='February' then 'Q4'
	when month='March' then 'Q4'
	when month='April' then 'Q1'
	when month='May' then 'Q1'
	when month='June' then 'Q1'
	when month='July' then 'Q2'
	when month='August' then 'Q2'
	when month='September' then 'Q2'
	when month='October' then 'Q3'
	when month='November' then 'Q3'
	when month='December' then 'Q3'
	else null
	end as Quarter
from sus_79365
left join ds_mysql_prod_project t
on xprojectid=t.id
where keyword='materials'
),
s2 as (
Select projectid , year ,Quarter,
  case 
  when is_Array(coun.material_type)=False or get_Array_length(coun.material_type)=0 then Array(coun.material_type)
  else coun.material_type
  end as material_type_new
  ,coun.material_weight
from s as p, unpivot p.datatablebase as coun at xyz
)
,
s3 as (
Select projectid , year,Quarter,material_type, material_weight
  from s2 as k,k.material_type_new  material_type
  )
  
Select projectid , year,Quarter,t.name as material_type,sum(material_weight) material_weight
from s3
left join ds_mysql_prod_tagelement t
on t.id=s3.material_type
group by projectid,year, quarter,t.name




with sub1 as (
  select p1._id,p1.year_timerange as Timerange, p1.distance_car, p1.distance_public_transport, p1.distance_motorbike, p1.distance_walking, p1.distance_others,p1.name_location from profile_73046 p1),

sub2 as(select 'Car' as col
union all
select 'Public Transport (bus, train, metro, subway, etc)' as col
union all
select 'Motorbike/Scooter' as col
union all
select 'Walking/ Bike/E-Scooter/ E-Bike' as col
union all
select 'Others' as col),

sub3 as(select p1._id,p1.name_location as projectId, Timerange,sub2.col as commute_type, 

  case col
	when 'Car' then p1.distance_car
  	when 'Public Transport (bus, train, metro, subway, etc)' then p1.distance_public_transport
  	when 'Motorbike/Scooter' then p1.distance_motorbike
  	when 'Walking/ Bike/E-Scooter/ E-Bike' then p1.distance_walking
	when 'Others' then p1.distance_others
	else null
  end
  as commute_mileage
 

from sub1 p1
cross join sub2
)
Select * from sub3
where  commute_mileage is not null

 ,s4 as (
select _id,projectId,Timerange,commute_type,commute_mileage
from sub3
where commute_mileage is not null
)
,
s5 as (
select s4._id,p2.name as projectId,Timerange,1 as count,
   case
	when commute_type='Public Transport (bus, train, metro, subway, etc)' then 'Public Transport'
	else commute_type
end as commute
  from s4
  left join profile_74147 p2 on p2._id= s4.projectId

)
Select * from s4

*/