with temp as (
Select 'Total no. of activities' as col
  union all
Select 'No. of Activities reported' as col
   union all
Select 'Approved by 1st Manager' as col
   union all
Select 'Approved by 2nd manager' as col
   union all
Select 'Number of Deviations Reported' as col
),
table1 as (Select p.subcat_output, p._id, p.focus_area, p.fy, p.projectId, p.flag_deviation_delay,
				reverse(reverse(SPLIT_PART((data.name), '|',3))) as censusCode1,
				case when data.parent = 18943 then data.id else data.parent end as parent,
				case when data.parent = 18943 then 'Cluster' else censusCode1 end as censusCode,  
				f.name as fy_timerange,
				m.name as Month, 
				query1.taskreported as total_activity_reported,
				query1.manager1 as manager1_approved
				
 
		from profile_54963 p
left join ds_mysql_prod_project data on
data.id = p.projectId

left join ds_mysql_prod_tagelement f on
p.fy=f.id
left join ds_mysql_prod_tagelement m on 
p.month=m.id
				
left join NGOPartnerReporting_Query1_flow query1 on
query1.taskreported = p._id
),

table2 as (select p.parent as parent1,
		   p.censusCode as censusCode,
		   p.subcat_output as subcat_output,
		   p.focus_area as focus_area1,
		   p.projectId as projectId1 ,
		   p.flag_deviation_delay as flag_deviation_delay,
		   p._id as _id1,
		   p.fy as fy1,
		   reverse(reverse(SPLIT_PART((data1.name), '|',1))) as projectCode,
		   case when responseData.status like 'PENDING_APPROVAL' or (responseData.status like 'SUBMITTED' AND responseData.approvalLog IS NULL) THEN 0 ELSE 1 END AS  dataCheck,
		   data27489.village as villageName,
		   p.fy_timerange as fy_timerange1,
		   p.month as month1,
		   total_activity_reported,
		   manager1_approved
		   
		   from table1 p

left join ds_mysql_prod_project data1 on
data1.id = p.parent
		   
left join ds_mongo_taskresponse responseData on
responseData.profileinstanceid = p._id

left join profile_27489 data27489 on 
data27489.name = p.censusCode
	
order by dataCheck desc
),

table3 as ( select parent1, censusCode, subcat_output,focus_area1, projectId1, flag_deviation_delay, _id1, projectCode,dataCheck,villageName,fy1,
		   fy_timerange1, month1,
		   data27396.project_manager as project_manager27396,
		   data27396._id as recordId,
		   data27396.fy as fy27396,
		   data27420.project_manager as project_manager27420,
		   data27420.fy as fy27420,
		   tags.name as fy27396_1,
		   tags1.name as fy_1,
		   tags2.name as fy27420_1,
		   case when fy27420_1 is null or fy_1 < fy27420_1 then fy27396_1 else fy27420_1 end as fy27420_2,
		   case when project_manager27420 is null then project_manager27396 else project_manager27420 end as project_manager27420_1,
		   case when fy27420_2 <= fy_1 or fy27396_1 <= fy_1 then 1 else 0 end as flag,
		   case when subcat_output is not null and flag_deviation_delay = '1' then 1 else 0 end as deviations,
		   total_activity_reported,
		   manager1_approved
		   
		   from table2 p

left join profile_27396 data27396 on 
data27396.name = projectCode
		   
left join profile_27420 data27420 on
data27420.project_code = data27396._id
		   
left join ds_mysql_prod_tagelement tags on
tags.id = data27396.fy
		   
left join ds_mysql_prod_tagelement tags1 on
tags1.id = fy1
		   
left join ds_mysql_prod_tagelement tags2 on
tags2.id = data27420.fy
		   
order by fy27420_2 desc
),

table4 as (Select 
		   	listagg(fy27420_2,',') as fy27420_2, 
			listagg(fy27396_1,',') as fy27396_1,
			listagg(project_manager27396 ,',') as project_manager27396,
			listagg(project_manager27420_1,',') as project_manager27420_1,
			listagg(fy_1 ,',') as fy_1,
			listagg(subcat_output,',') as subcat_output,
			listagg(flag_deviation_delay,',') as flag_deviation_delay,
			listagg(dataCheck,',') as dataCheck,
			_id1,flag,fy_timerange1, month1,projectCode,deviations,
		   total_activity_reported,
		   manager1_approved
		from table3 p

group by _id1,flag,fy_timerange1, month1,projectCode,deviations,total_activity_reported,
		   manager1_approved
),

table5 as (Select
		   
		   reverse(reverse(SPLIT_PART((fy27420_2), ',',1))) as fy27420_2,
		   reverse(reverse(SPLIT_PART((fy27396_1), ',',1))) as fy27396_1,
		   reverse(reverse(SPLIT_PART((project_manager27396), ',',1))) as project_manager27396,
		   reverse(reverse(SPLIT_PART((project_manager27420_1), ',',1))) as project_manager27420_1,
		   flag_deviation_delay as flag_deviation_delay1,
		   reverse(reverse(SPLIT_PART((fy_1), ',',1))) as fy_1,
		   reverse(reverse(SPLIT_PART((subcat_output), ',',1))) as subcat_output,
		   reverse(reverse(SPLIT_PART((flag_deviation_delay), ',',1))) as flag_deviation_delay,
		   
		   reverse(reverse(SPLIT_PART((dataCheck), ',',1))) as dataCheck,
		   _id1, flag,
		   case when fy27420_2 <= fy_1 then project_manager27420_1 else project_manager27396 end as projectManager,
		   deviations,
		    
		   case when subcat_output is null or dataCheck = 0 then 0 else 1 end as manager2,
		   case when dataCheck = 1 and subcat_output = 0 then 1 else manager2 end as manager2_1, fy_timerange1, month1,projectCode,total_activity_reported,
		   manager1_approved
		   		   
		   from table4 p
),

table6 as (Select listagg(manager2_1,',') as manager2_1,
		   sum(deviations) as deviations, _id1,flag,projectManager,fy_timerange1, month1,projectCode,total_activity_reported,
		   manager1_approved					 
						 from table5 p						 					
group by _id1, flag,projectManager,fy_timerange1, month1,projectCode,total_activity_reported,
		   manager1_approved

),
table6_1 as (select   
			reverse(reverse(SPLIT_PART((manager2_1), ',',1))) as manager2_1,
			 _id1, deviations,flag,projectManager ,fy_timerange1, month1,projectCode,total_activity_reported,
		   manager1_approved
			 
			from table6 p
),

table7 as (Select distinct _id1 as Totalactivity, (manager2_1) as manager2actReported, 
		   
		   (deviations) as devReported,flag,projectManager,fy_timerange1, month1,projectCode,total_activity_reported,
		   manager1_approved
		   from table6_1 p 

),
ss1 as (

select Totalactivity as Total_activity,
case when Totalactivity is not null then 1 else 0 end as tot,
case when total_activity_reported is not null then 1 else 0 end as  num_act_report,
total_activity_reported as number_of_activities_reported, 
(cast(manager1_approved as NUMBER) + cast(manager2actReported as NUMBER)) as manager_1_approved,
cast(manager2actReported as NUMBER) as manager_2_approved, devReported as number_of_deviations,projectmanager,projectCode, fy_timerange1 as fy_timerange, month1 as month,
1 as count from table7 p where flag = 1         
  
  )
  Select Total_activity,number_of_activities_reported,manager_1_approved,manager_2_approved, number_of_deviations,
sum(case col
when 'Total no. of activities' then ss1.tot
when 'No. of Activities reported' then ss1.num_act_report
when 'Approved by 1st Manager' then ss1.manager_1_approved
when 'Approved by 2nd manager' then ss1.manager_2_approved 
when 'Number of Deviations Reported' then ss1.number_of_deviations 
else 0
end) as count_tot,projectmanager,projectCode, fy_timerange,month, temp.col as type
from ss1 
cross join temp
group by Total_activity,number_of_activities_reported,manager_1_approved,manager_2_approved, number_of_deviations,projectmanager,projectCode, fy_timerange,month, temp.col
  
  
  
  
  
  
  
/*
with s as 
(Select t.name as projectid,('FY'||substring(EXTRACT(YEAR FROM(CAST(startdate AS datetime))),3,2)||'-'||substring(EXTRACT(YEAR FROM(CAST(startdate AS datetime)))+1,3,2) ) as year, datatablebase, questiontext,
 extract(Month from cast(startdate as datetime) )as Monthh,
case 
  when monthh=01 then 'January'
  when monthh=02 then 'February'
  when monthh=03 then 'March'
  when monthh=04 then 'April'
  when monthh=05 then 'May'
  when monthh=06 then 'June'
  when monthh=07 then 'July'
  when monthh=08 then 'August'
  when monthh=09 then 'September'
  when monthh=10 then 'October'
  when monthh=11 then 'November'
  when monthh=12 then 'December'
  end as month,
  case 
	when month='January' then 'Q4'
	when month='February' then 'Q4'
	when month='March' then 'Q4'
	when month='April' then 'Q1'
	when month='May' then 'Q1'
	when month='June' then 'Q1'
	when month='July' then 'Q2'
	when month='August' then 'Q2'
	when month='September' then 'Q2'
	when month='October' then 'Q3'
	when month='November' then 'Q3'
	when month='December' then 'Q3'
	else null
	end as Quarter
from sus_79365
left join ds_mysql_prod_project t
on xprojectid=t.id
where keyword='materials'
),
s2 as (
Select projectid , year ,Quarter,
  case 
  when is_Array(coun.material_type)=False or get_Array_length(coun.material_type)=0 then Array(coun.material_type)
  else coun.material_type
  end as material_type_new
  ,coun.material_weight
from s as p, unpivot p.datatablebase as coun at xyz
)
,
s3 as (
Select projectid , year,Quarter,material_type, material_weight
  from s2 as k,k.material_type_new  material_type
  )
  
Select projectid , year,Quarter,t.name as material_type,sum(material_weight) material_weight
from s3
left join ds_mysql_prod_tagelement t
on t.id=s3.material_type
group by projectid,year, quarter,t.name




with sub1 as (
  select p1._id,p1.year_timerange as Timerange, p1.distance_car, p1.distance_public_transport, p1.distance_motorbike, p1.distance_walking, p1.distance_others,p1.name_location from profile_73046 p1),

sub2 as(select 'Car' as col
union all
select 'Public Transport (bus, train, metro, subway, etc)' as col
union all
select 'Motorbike/Scooter' as col
union all
select 'Walking/ Bike/E-Scooter/ E-Bike' as col
union all
select 'Others' as col),

sub3 as(select p1._id,p1.name_location as projectId, Timerange,sub2.col as commute_type, 

  case col
	when 'Car' then p1.distance_car
  	when 'Public Transport (bus, train, metro, subway, etc)' then p1.distance_public_transport
  	when 'Motorbike/Scooter' then p1.distance_motorbike
  	when 'Walking/ Bike/E-Scooter/ E-Bike' then p1.distance_walking
	when 'Others' then p1.distance_others
	else null
  end
  as commute_mileage
 

from sub1 p1
cross join sub2
)
Select * from sub3
where  commute_mileage is not null

 ,s4 as (
select _id,projectId,Timerange,commute_type,commute_mileage
from sub3
where commute_mileage is not null
)
,
s5 as (
select s4._id,p2.name as projectId,Timerange,1 as count,
   case
	when commute_type='Public Transport (bus, train, metro, subway, etc)' then 'Public Transport'
	else commute_type
end as commute
  from s4
  left join profile_74147 p2 on p2._id= s4.projectId

)
Select * from s4

*/