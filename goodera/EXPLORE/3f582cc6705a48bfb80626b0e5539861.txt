with years as(
  select '2018' as col
  union all
  select '2019' as col
  union all
  select '2020' as col
  union all
  select '2021' as col
  union all
  select '2022' as col
  union all
  select '2023' as col
  union all
  select '2024' as col
  union all
  select '2025' as col),
  
sub1 as(
  select p1.project_name, t1.name as choose, years.col as year, 
(p1.project_name || '-' || t1.name || '-' || years.col) as lookup,

case years.col
	when '2018' then 0
	when '2019' then 0
	when '2020' then 0
	when '2021' then 0
	when '2022' then 0
	when '2023' then 0
	when '2024' then 0
	when '2025' then 0
	else NULL
end as zeroes,
  
case years.col
	when '2018' then '2018-04-01|2019-04-01'
	when '2019' then '2019-04-01|2020-04-01'
	when '2020' then '2020-04-01|2021-04-01'
	when '2021' then '2021-04-01|2022-04-01'
	when '2022' then '2022-04-01|2023-04-01'
	when '2023' then '2023-04-01|2024-04-01'
	when '2024' then '2024-04-01|2025-04-01'
	when '2025' then '2025-04-01|2026-04-01'
	else NULL
end as fy_timerange

from profile_41363 p1
cross join years

left join ds_mysql_prod_tagelement t1 on t1.id = p1.project_type

group by p1.project_name, t1.name, years.col),

---xx--Zero Table

sub2 as(
  select p2.project_name, extract(year from cast(p1.fy_timerange.start as DATE)) as start_year, sum(p1.disbursed) as disbursed, (p2.project_name || '-' || t2.name || '-' || start_year) as lookup
from profile_79979 p1
left join profile_41363 p2 on p2._id = p1.project_name
left join ds_mysql_prod_tagelement t2 on t2.id = p2.project_type
  
group by p2.project_name, p1.fy_timerange, t2.name)

--xx--Disbursed

select s1.project_name, s1.year, s1.choose, 'Percentage' as dimensions, 

GREATEST(
  	nvl(s1.zeroes, s2.disbursed),
  	nvl(s2.disbursed, s1.zeroes) ) as total

from sub1 s1
left join sub2 s2 on s2.lookup = s1.lookup