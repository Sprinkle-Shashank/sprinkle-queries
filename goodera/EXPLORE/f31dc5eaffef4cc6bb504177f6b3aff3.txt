with sub1 as(
  select x1._id as id, x1.profileinstanceid, x1.status, x1.active, x1.data, x1.taskuserid, x2.taskid, x5.projectid, x6.profileid, x4.sectionid, x6.name as section, x7.name as profile, x8.name as project, x10.name as program,
  
case
  when is_array(x1.submissionlog) = false or get_array_length(x1.submissionlog) = 0 then 
  	   array(x1.submissionlog)
  else x1.submissionlog
end as submissionlog_new,
case
  when is_array(x1.approvallog) = false or get_array_length(x1.approvallog) = 0 then 
  	   array(x1.approvallog)
  else x1.approvallog
end as approvallog_new

from ds_mongo_taskresponse x1 

left join ds_mysql_prod_taskuser x2 on x2.id = x1.taskuserid
left join ds_mysql_prod_task x3 on x3.id = x2.taskid
left join ds_mysql_prod_flowtask x4 on x4.id = x3.flowtaskid
left join ds_mysql_prod_projectflow x5 on x5.id = x3.projectflowid
left join ds_mysql_prod_section x6 on x6.id = x4.sectionid
left join ds_mysql_prod_profile x7 on x7.id = x6.profileid
left join ds_mysql_prod_project x8 on x8.id = x5.projectid
left join ds_mysql_prod_project x9 on x9.id = x8.parent
left join ds_mysql_prod_project x10 on x10.id = x9.parent

where (x6.profileid = 145 or x6.profileid = 36901) and x1.status = 'REJECTED' 
and x1.active = 't'),

sub2 as(
  select s1.*, sublog, applog,
  
cast(applog."approverEmail" as VARCHAR) as approver_email,
cast(applog."approverName" as VARCHAR) as approver_name,
cast(applog."approverComments" as VARCHAR) as approver_comments,
cast(applog."timestamp" as DATETIME) as approval_date_time,
  
cast(sublog."email" as VARCHAR) as data_entry_email

from sub1 s1, s1.submissionlog_new sublog, s1.approvallog_new applog),

sub3 as(
  select s2.id, s2.profileinstanceid, s2.data, s2.program, s2.project, s2.profile, s2.section, s2.approver_email, s2.approver_name, s2.approver_comments, s2.data_entry_email,
s2.approval_date_time
  
from sub2 s2

group by s2.id, s2.profileinstanceid, s2.data, s2.program, s2.project, s2.profile, s2.section, s2.approver_email, s2.approver_name, s2.approver_comments, s2.data_entry_email,
s2.approval_date_time),

sub4 as(
  select s3.id, s3.profileinstanceid, s3.data, s3.program, s3.project, s3.profile, s3.section, s3.approver_email, s3.approver_name, s3.approver_comments, s3.data_entry_email, s3.approval_date_time,

row_number() over (partition by s3.id order by s3.approval_date_time desc) as row

from sub3 s3),

sub5 as(
  select s4.id, s4.data, s4.program, s4.project, s4.profile, s4.section, s4.approver_email, s4.approver_name, s4.approver_comments, s4.data_entry_email,

p1.trainee_name as trainee_name1, p2.trainee_name as trainee_name2,  cast(s4.data.trainee_name as VARCHAR) as trainee_name3,
nvl(p1.trainee_name, p2.trainee_name, cast(s4.data.trainee_name as VARCHAR)) as trainee_name,
  
p1.name as record_name1, p2.name as record_name2, 
cast(s4.data.name as VARCHAR) as record_name3,  
nvl(p1.name, p2.name, cast(s4.data.name as VARCHAR)) as record_name

from sub4 s4

left join profile_145 p1 on p1._id = s4.profileinstanceid
left join profile_36901 p2 on p2._id = s4.profileinstanceid

where s4.row = 1)

select s5.id, s5.program, s5.project, s5.profile, s5.section, s5.approver_name, s5.approver_email, s5.approver_comments, s5.data_entry_email, s5.record_name, s5.trainee_name, s5.data.fy_timerange, cast(s5.data.reg_no as VARCHAR), 

TO_CHAR(cast(s5.data.date_of_reg as DATE), 'DD-MM-YYYY'), 
TO_CHAR(cast(s5.data.start as DATE), 'DD-MM-YYYY'), 
TO_CHAR(cast(s5.data.end as DATE), 'DD-MM-YYYY'), 
TO_CHAR(cast(s5.data.dob as DATE), 'DD-MM-YYYY'), 

s5.data.age, t1.name as gender, s5.data.mobile_no, s5.data.mobile_number_2, t2.name as type_of_dis, s5.data.lvl_of_dis, cast(s5.data.addr as VARCHAR), s5.data.district, s5.data.state, s5.data.email, s5.data.edu_qual, s5.data.occu, s5.data.marriage, s5.data.fam_head, s5.data.fam_size, s5.data.fam_income, s5.data.fam_occ

from sub5 s5

left join ds_mysql_prod_tagelement t1 on t1.id = s5.data.gender
left join ds_mysql_prod_tagelement t2 on t2.id = s5.data.type_of_dis
