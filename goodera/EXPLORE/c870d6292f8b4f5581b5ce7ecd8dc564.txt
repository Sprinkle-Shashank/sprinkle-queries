with years as(
  select '2018' as col
  union all
  select '2019' as col
  union all
  select '2020' as col
  union all
  select '2021' as col
  union all
  select '2022' as col
  union all
  select '2023' as col
  union all
  select '2024' as col
  union all
  select '2025' as col),
  
sub1 as(
  select p1.project_name, t1.name as choose, years.col as year,

case years.col
	when '2018' then 0
	when '2019' then 0
	when '2020' then 0
	when '2021' then 0
	when '2022' then 0
	when '2023' then 0
	when '2024' then 0
	when '2025' then 0
	else NULL
end as zeroes,
  
case years.col
	when '2018' then '2018-04-01|2019-04-01'
	when '2019' then '2019-04-01|2020-04-01'
	when '2020' then '2020-04-01|2021-04-01'
	when '2021' then '2021-04-01|2022-04-01'
	when '2022' then '2022-04-01|2023-04-01'
	when '2023' then '2023-04-01|2024-04-01'
	when '2024' then '2024-04-01|2025-04-01'
	when '2025' then '2025-04-01|2026-04-01'
	else NULL
end as fy_timerange

from profile_41363 p1
cross join years

left join ds_mysql_prod_tagelement t1 on t1.id = p1.project_type

group by p1.project_name, t1.name, years.col),

---xxx--- ZERO TABLE

sub2 as(
  select extract(year from cast(p2.fy_timerange.start as DATE)) as year,
sum(p2.disbursed) as disbursed
from profile_79979 p2
group by 1),

---xxx--- DISBURSED

sub3 as(
  select extract(year from cast(p3.fy_timerange.start as DATE)) as year,
sum(p3.csr_spent) as csr_spent
from profile_80535 p3
group by 1),

---xxx---- CSR SPENT

sub4 as(
  select s1.project_name, s1.choose, s1.fy_timerange, s1.zeroes, s2.disbursed, s3.csr_spent,

GREATEST(
  nvl(s1.zeroes, s2.disbursed, s3.csr_spent),
  nvl(s2.disbursed, s1.zeroes, s3.csr_spent),
  nvl(s3.csr_spent, s1.zeroes, s2.disbursed) ) as total

from sub1 s1

left join sub2 s2 on s2.year = s1.year
left join sub3 s3 on s3.year = s1.year)

select project_name, choose, fy_timerange, 'Percentage' as dimensions, total, 'Greater than zero' sa x_filter
from sub4
where total != 0