--GSIF_4_0_Reporting_Data_Srujna
With temp1 as (
 Select 'fy_00_timerange' as col1
  union all
 Select 'fy_32_timerange' as col1),
 
 temp2 as (
	Select 'a0_32' as col
  union all
	Select 'b0_32' as col
  union all
	Select 'c0_32' as col
  union all
    Select 'd0_32' as col
  union all
	Select 'e0_32' as col
  union all
    Select 'f0_32' as col
  union all
	Select 'g0_32' as col
  union all
	Select 'h0_32' as col
  union all
	Select 'i0_32' as col
  
 ),
	
s as ( Select p.fy_32_timerange,
p.a0_32, p.b0_32, p.c0_32, p.d0_32, p.e0_32,p.f0_32, p.g0_32, p.h0_32, p.i0_32,p.projectId
from profile_74188 p),

s2 as(Select
case col1
 when 'fy_32_timerange' then s.fy_32_timerange

 else null
 end as time_data,
	  
case col
when 'a0_32' then s.a0_32
when 'b0_32' then s.b0_32
when 'c0_32' then s.c0_32
when 'd0_32' then s.d0_32
when 'e0_32' then s.e0_32
when 'f0_32' then s.f0_32
when 'g0_32' then s.g0_32
when 'h0_32' then s.h0_32
when 'i0_32' then s.i0_32



else null
end as data, temp2.col as "data_label",temp1.col1 as "timeperiods",
substring(data_label,4,2) as  data_number,
substring(timeperiods,4,2) as time_number,
	  
case 
when data_number = time_number
then '1'
else '0'
end as match,projectId
from s
cross join temp1
cross join temp2
where match=1)
 
Select data_label,data,projectId,JSON_SERIALIZE(time_data) AS fy_timerange
from s2
where fy_timerange is not null
group by fy_timerange, data_label, data,projectId
order by fy_timerange desc