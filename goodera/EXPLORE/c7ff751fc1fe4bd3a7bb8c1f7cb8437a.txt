
with temp as (
Select 'Total no. of activities' as col
  union all
Select 'No. of Activities reported' as col
   union all
Select 'Approved by 1st Manager' as col
   union all
Select 'Approved by 2nd manager' as col
   union all
Select 'Number of Deviations Reported' as col
),
table1 as (Select p.subcat_output, p._id, p.focus_area, p.fy, p.projectId, p.flag_deviation_delay,
				reverse(reverse(SPLIT_PART((data.name), '|',3))) as censusCode1,
				case when data.parent = 18943 then data.id else data.parent end as parent,
				case when data.parent = 18943 then 'Cluster' else censusCode1 end as censusCode,  
				f.name as fy_timerange,
				m.name as Month, 
				query1.taskreported as total_activity_reported,
				query1.manager1 as manager1_approved
				
 
		from profile_54963 p
left join ds_mysql_prod_project data on
data.id = p.projectId

left join ds_mysql_prod_tagelement f on
p.fy=f.id
left join ds_mysql_prod_tagelement m on 
p.month=m.id
				
left join NGOPartnerReporting_Query1_flow query1 on
query1.taskreported = p._id
),

table2 as (select p.parent as parent1,
		   p.censusCode as censusCode,
		   p.subcat_output as subcat_output,
		   p.focus_area as focus_area1,
		   p.projectId as projectId1 ,
		   p.flag_deviation_delay as flag_deviation_delay,
		   p._id as _id1,
		   p.fy as fy1,
		   reverse(reverse(SPLIT_PART((data1.name), '|',1))) as projectCode,
		   case when responseData.status like 'PENDING_APPROVAL' or (responseData.status like 'SUBMITTED' AND responseData.approvalLog IS NULL) THEN 0 ELSE 1 END AS  dataCheck,
		   data27489.village as villageName,
		   p.fy_timerange as fy_timerange1,
		   p.month as month1,
		   total_activity_reported,
		   manager1_approved
		   
		   from table1 p

left join ds_mysql_prod_project data1 on
data1.id = p.parent
		   
left join ds_mongo_taskresponse responseData on
responseData.profileinstanceid = p._id

left join profile_27489 data27489 on 
data27489.name = p.censusCode
	
order by dataCheck desc
),

table3 as ( select parent1, censusCode, subcat_output,focus_area1, projectId1, flag_deviation_delay, _id1, projectCode,dataCheck,villageName,fy1,
		   fy_timerange1, month1,
		   data27396.project_manager as project_manager27396,
		   data27396._id as recordId,
		   data27396.fy as fy27396,
		   data27420.project_manager as project_manager27420,
		   data27420.fy as fy27420,
		   tags.name as fy27396_1,
		   tags1.name as fy_1,
		   tags2.name as fy27420_1,
		   case when fy27420_1 is null or fy_1 < fy27420_1 then fy27396_1 else fy27420_1 end as fy27420_2,
		   case when project_manager27420 is null then project_manager27396 else project_manager27420 end as project_manager27420_1,
		   case when fy27420_2 <= fy_1 or fy27396_1 <= fy_1 then 1 else 0 end as flag,
		   case when subcat_output is not null and flag_deviation_delay = '1' then 1 else 0 end as deviations,
		   total_activity_reported,
		   manager1_approved
		   
		   from table2 p

left join profile_27396 data27396 on 
data27396.name = projectCode
		   
left join profile_27420 data27420 on
data27420.project_code = data27396._id
		   
left join ds_mysql_prod_tagelement tags on
tags.id = data27396.fy
		   
left join ds_mysql_prod_tagelement tags1 on
tags1.id = fy1
		   
left join ds_mysql_prod_tagelement tags2 on
tags2.id = data27420.fy
		   
order by fy27420_2 desc
),

table4 as (Select 
		   	listagg(fy27420_2,',') as fy27420_2, 
			listagg(fy27396_1,',') as fy27396_1,
			listagg(project_manager27396 ,',') as project_manager27396,
			listagg(project_manager27420_1,',') as project_manager27420_1,
			listagg(fy_1 ,',') as fy_1,
			listagg(subcat_output,',') as subcat_output,
			listagg(flag_deviation_delay,',') as flag_deviation_delay,
			listagg(dataCheck,',') as dataCheck,
			_id1,flag,fy_timerange1, month1,projectCode,deviations,
		   total_activity_reported,
		   manager1_approved,
		   villageName
		from table3 p

group by _id1,flag,fy_timerange1, month1,projectCode,deviations,total_activity_reported,
		   manager1_approved,villageName
),

table5 as (Select
		   villageName,
		   reverse(reverse(SPLIT_PART((fy27420_2), ',',1))) as fy27420_2,
		   reverse(reverse(SPLIT_PART((fy27396_1), ',',1))) as fy27396_1,
		   reverse(reverse(SPLIT_PART((project_manager27396), ',',1))) as project_manager27396,
		   reverse(reverse(SPLIT_PART((project_manager27420_1), ',',1))) as project_manager27420_1,
		   flag_deviation_delay as flag_deviation_delay1,
		   reverse(reverse(SPLIT_PART((fy_1), ',',1))) as fy_1,
		   reverse(reverse(SPLIT_PART((subcat_output), ',',1))) as subcat_output,
		   reverse(reverse(SPLIT_PART((flag_deviation_delay), ',',1))) as flag_deviation_delay,
		   
		   reverse(reverse(SPLIT_PART((dataCheck), ',',1))) as dataCheck,
		   _id1, flag,
		   case when fy27420_2 <= fy_1 then project_manager27420_1 else project_manager27396 end as projectManager,
		   deviations,
		    
		   case when subcat_output is null or dataCheck = 0 then 0 else 1 end as manager2,
		   case when dataCheck = 1 and subcat_output = 0 then 1 else manager2 end as manager2_1, fy_timerange1, month1,projectCode,total_activity_reported,
		   manager1_approved
		   		   
		   from table4 p
),

table6 as (Select listagg(manager2_1,',') as manager2_1,
		   sum(deviations) as deviations, _id1,flag,projectManager,fy_timerange1, month1,projectCode,total_activity_reported,
		   manager1_approved,villageName					 
						 from table5 p						 					
group by _id1, flag,projectManager,fy_timerange1, month1,projectCode,total_activity_reported,
		   manager1_approved,villageName

),
table6_1 as (select   
			reverse(reverse(SPLIT_PART((manager2_1), ',',1))) as manager2_1,
			 _id1, deviations,flag,projectManager ,fy_timerange1, month1,projectCode,total_activity_reported,
		   manager1_approved,villageName
			 
			from table6 p
),

table7 as (Select distinct _id1 as Totalactivity, (manager2_1) as manager2actReported, 
		   
		   (deviations) as devReported,flag,projectManager,fy_timerange1, month1,projectCode,total_activity_reported,
		   manager1_approved,villageName
		   from table6_1 p 

),
ss2 as (

select Totalactivity as Total_activity,
case when Totalactivity is not null then 1 else 0 end as tot,
case when total_activity_reported is not null then 1 else 0 end as  num_act_report,
total_activity_reported as number_of_activities_reported, 
(cast(manager1_approved as int) + cast(manager2actReported as int)) as manager_1_approved,
manager2actReported as manager_2_approved, devReported as number_of_deviations,projectmanager,projectCode, fy_timerange1 as fy_timerange, month1 as month,villageName,
1 as count from table7 p where flag = 1         
),
ss1 as (
select Total_activity, tot,num_act_report,
number_of_activities_reported, 
case when manager_1_approved is not null  and manager_1_approved !=0 then 1 else 0 end as  man_1_app,
  case when manager_2_approved is not null  and manager_2_approved !=0 then 1 else 0 end as  man_2_app,
    case when number_of_deviations is not null  and number_of_deviations !=0 then 1 else 0 end as  num_dev
,projectmanager,projectCode, fy_timerange,  month,
 count,villageName
  from ss2
),
kk as(
  Select tot,num_act_report,man_1_app,man_2_app, num_dev,villageName,
sum(case col
when 'Total no. of activities' then tot
when 'No. of Activities reported' then num_act_report
when 'Approved by 1st Manager' then man_1_app
when 'Approved by 2nd manager' then man_2_app 
when 'Number of Deviations Reported' then num_dev 
else 0
end) as count_tot,t.name as project_manager,projectCode, fy_timerange,month, temp.col as type
from ss1
left join ds_mysql_prod_tagelement t
on t.id=projectmanager
cross join temp
group by tot,num_act_report,man_1_app,man_2_app, num_dev,t.name,projectCode, fy_timerange,month, temp.col,villageName
)
, Lookup as
(select cast((split_part(split_part(prod.name,'|',1),'.',1)) as varchar) as ProjectCode,split_part(prod.name,'|',3) as censuscode,f.name as fy_timerange,CONCAT(ProjectCode,fy_timerange) as CODE
from profile_29973 p 
left join ds_mysql_prod_project prod on
prod.id=p.projectid
left join ds_mysql_prod_tagelement f on
p.fy=f.id
)

,Base1 as
(select cast(q.name as varchar) as ProjectCode,f.name as fy_timerange,m.name as Project_Manager,CONCAT(ProjectCode,fy_timerange) as CODE
from profile_27420 d
left join ds_mysql_prod_tagelement f on
d.fy=f.id
left join ds_mysql_prod_tagelement m on
d.project_manager=m.id
left join profile_27396 q on
d.project_code=q._id
union
select cast(c.name as varchar)as ProjectCode,f.name as fy_timerange,m.name as Project_Manager,CONCAT(ProjectCode,fy_timerange) as CODE 
from profile_27396 c	
left join ds_mysql_prod_tagelement f on
c.fy=f.id
left join ds_mysql_prod_tagelement m on
c.project_manager=m.id)

,Base2 as
(select p.fy_timerange,p.Project_Manager,p.ProjectCode,l.censuscode
from Base1 p
left join lookup l
on p.CODE=l.CODE),
Base3 as(select distinct(l.village) as Village, p.fy_timerange,p.Project_Manager,p.ProjectCode 
from Base2 p 
left join profile_27489 l 
on p.censuscode=l.name
group by fy_timerange,Project_Manager,ProjectCode,village) 
,
ll as (
select * from Base3  
union all
select distinct(villagename) as Village, kk.fy_timerange,kk.Project_Manager,kk.ProjectCode 
from kk

order by fy_timerange 
)

Select village,fy_timerange,project_manager,projectcode
from ll
group by 1,2,3,4

 