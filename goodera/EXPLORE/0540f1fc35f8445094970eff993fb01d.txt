
with sub as 
(
select 
 pro.name as projectid, p.name, date, notes, keyword_1, hours, num_middle, trainer_organization, ven.name as vendor, cou.name as country, nvl2(SUBSTRING(ven.name, 1, POSITION(' (' in ven.name)), SUBSTRING(ven.name, 1, POSITION(' (' in ven.name)), ven.name) as vendor_name, extract(year from date) as year_only
   
case when extract(month from date)=1 then (extract(year from date)-1) 
else extract(year from date) end as year,
  case when vendor_name='' then vendor else vendor_name end as vendor_first_update,
   other, photo, file, historical,num_female, num_male, num_other , total_participants, trainer,
  (extract(month from date) - (extract(month from date)-1)) as count
  from profile_64801 as p
  
 
 left join ds_mysql_prod_project pro 
on p.projectId = pro.id
  
 left join ds_mysql_prod_project fac 
on p.projectId = fac.id

 left join ds_mysql_prod_project ven 
on fac.parent = ven.id

 left join ds_mysql_prod_project cou 
on ven.parent = cou.id
)
, sub2 as
(
select s1.*,c from sub as s1, s1.trainer_organization c
)

select
s2.projectId, s2.name, date, other, notes, photo, file, trainer, historical, num_female, num_male , keyword_1, num_other , vendor_name , hours, num_middle, country, vendor_first_update as vendor,triorg.name as trainer_organization, total_participants, year, count
from sub2 as s2

left join ds_mysql_prod_tagelement triorg 
on s2.c = triorg.id

where country <> 'Test Country'

group by 
s2.projectId, s2.name, date, other, notes, photo, file, historical, keyword_1,num_female, num_male, hours, total_participants,vendor_name, num_middle, country, vendor, triorg.name, s2.trainer_organization, trainer ,
num_other, s2.vendor_first_update, s2.year, count
