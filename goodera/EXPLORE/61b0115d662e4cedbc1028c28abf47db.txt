with temp as
(
  select 'energy_levelsachieved_verified' as col
  union all
  select 'wastewater_levelsachieved_verified' as col
  union all
  select 'ems_levelsachieved_verified' as col
  union all
  select 'chemicals_levelsachieved_verified' as col
  union all
  select 'waste_levelsachieved_verified' as col
  union all
  select 'air_levelsachieved_verified' as col
  union all
  select 'water_levels_achieved_verified' as col
  ),
sub1 as(
select _id,group_name, groupid, surveyid, country, energy_levelsachieved_verified, wastewater_levelsachieved_verified, ems_levelsachieved_verified, chemicals_levelsachieved_verified, sq.fy_timerange, waste_levelsachieved_verified, air_levelsachieved_verified, water_levels_achieved_verified, sacid,
case col
	when 'energy_levelsachieved_verified' then sq.energy_levelsachieved_verified
	when 'wastewater_levelsachieved_verified' then sq.wastewater_levelsachieved_verified
	when 'ems_levelsachieved_verified' then sq.ems_levelsachieved_verified
	when 'chemicals_levelsachieved_verified' then sq.chemicals_levelsachieved_verified
	when 'waste_levelsachieved_verified' then sq.waste_levelsachieved_verified
	when 'air_levelsachieved_verified' then sq.air_levelsachieved_verified
	when 'water_levels_achieved_verified' then sq.water_levels_achieved_verified
  else Null
	end as level, temp.col as module
from profile_74133 sq
cross join temp
  )
  ,sub2 as(
select s1.*, pd.cdms_id,ltrim( rtrim(json_serialize(mr.source_div),']'),'[') as source_div_new, mr.cr_tier, json_serialize(mr.facility_type) as facility_type_new, mr.wet_process, mr.timeperiod_timerange, position(1 in level) as level1, position(2 in level) as level2, position(3 in level) as level3, module, upper(substring(module,1,position('_' in module)-1)) as modules
  from sub1 s1
left join profile_74334 pd
on pd.higg_id=s1.sacid
left join profile_60928 mr
on pd.cdms_id=mr.factory_id
where level!=' ' 
),
sub3 as
(
select country, fy_timerange, modules, cdms_id, level1, first_value(cr_tier)
over(partition by country, fy_timerange, modules, cdms_id, level1
order by cast(timeperiod_timerange.start as date) desc
rows between unbounded preceding and unbounded following) as cr_tier, 
  first_value(facility_type_new)
over(partition by country, fy_timerange, modules, cdms_id, level1
order by cast(timeperiod_timerange.start as date) desc
rows between unbounded preceding and unbounded following) as facility_type
  , first_value(wet_process)
over(partition by country, fy_timerange, modules, cdms_id, level1
order by cast(timeperiod_timerange.start as date) desc
rows between unbounded preceding and unbounded following) as wet_process,
  first_value(source_div_new)
over(partition by country, fy_timerange, modules, cdms_id, level1
order by cast(timeperiod_timerange.start as date) desc
rows between unbounded preceding and unbounded following) as source_div
from sub2
),
sub4 as(
select cr_tier, country, fy_timerange, wet_process, modules, cdms_id, level1, facility_type, SPLIT_TO_ARRAY(source_div,',') as source_div from sub3
group by cr_tier, country, fy_timerange, modules, wet_process, cdms_id, level1, facility_type, source_div)
, 
sub5 as (
select cr_tier, country, fy_timerange, wet_process, modules, cdms_id, level1, facility_type,
  --rtrim(ltrim(json_serialize(source),'['),']') as source_div,
  case when get_array_length(source_div) = 0 then array(0)
  else COALESCE(source_div,array(0)) end new_source, rtrim(ltrim(json_serialize(new_source),'['),']') as new_source1
  from sub4 s4),
  NS AS (
  select 1 as n union all
  select 2 union all
  select 3 union all
  select 4 union all
  select 5 union all
  select 6 union all
  select 7 union all
  select 8 union all
  select 9 union all
  select 10
),
sub6 as(
  select cr_tier, country, fy_timerange, wet_process, modules, cdms_id, level1, facility_type,
  RTRIM(LTRIM(SPLIT_PART(new_source1, ',', NS.n),'"'),'"') AS tag1
from NS
inner join sub5 B ON NS.n <= REGEXP_COUNT(B.new_source1, ',') + 1),
sub7 as(
  select * from sub6
  where cdms_id is not null),
  sub8 as
  (
  select t1.name as region, s4.fy_timerange, cdms_id, level1,
	listagg(distinct modules,', ') as modules, cr_tier, facility_type as facility_type_new,
	 source_div
  from sub7 s4
  left join ds_mysql_prod_tagelement t
	on t.id=s4.country
	left join ds_mysql_prod_tagelement t1
	on t.parent=t1.id
	group by s4.fy_timerange, source_div, t1.name, cdms_id, level1, cr_tier, facility_type
	),
	sub9 as(
	select fy_timerange, source_div, facility_type_new, region, cdms_id, regexp_count(modules,',')+1 as mod, level1, cr_tier, 
	case 
	when position('957761' in facility_type_new)>0 and cr_tier=957758 then 'Level 1 Tier 1'
	when position('957761' in facility_type_new)>0 and cr_tier=957757 then 'Level 1 Tier 2'
 when position('957761' in facility_type_new)=0 and position('957762' in facility_type_new)>0 then 'Level 2 Mills' when position('957761' in facility_type_new)=0 and position('957762' in facility_type_new)=0 and position('957763' in facility_type_new)>0 then 'Level 2 Trim' else 'No' end as fac_type
	from sub8), 
	sub10 as
	(
	select fy_timerange, source_div, facility_type_new, cdms_id, cr_tier, region, case when mod=7 and level1=1 then 7 else level1 end as level_1, fac_type
	from sub9
	group by fy_timerange, source_div, facility_type_new, cr_tier, region, mod, level1, cdms_id, fac_type),
	sub11 as (
	select fy_timerange, source_div, facility_type_new as facility_type, s6.region, cdms_id as facs,1 as count, cr_tier, fac_type, mr.brand, level_1
	  from sub10 s6
	  left join profile_70187 mr
	  on s6.source_div=mr.business_div
	  where COALESCE(fac_type,'')!='No'
	), sub12 as (
	select fy_timerange, source_div, region, brand,level_1, fac_type, facs, count from sub11)
	select * from sub12