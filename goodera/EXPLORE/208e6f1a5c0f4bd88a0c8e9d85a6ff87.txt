with sub1 as(
  select name, fy_timerange, extract(month from cast(startdate as date)) as start_month, 
  extract(year from cast(startdate as date)) as start_year,
  case
		  when start_month = 1 then 'Jan'
		  when start_month = 2 then 'Feb'
		  when start_month = 3 then 'Mar'
		  when start_month = 4 then 'Apr'
		  when start_month = 5 then 'May'
		  when start_month = 6 then 'Jun'
		  when start_month = 7 then 'Jul'
		  when start_month = 8 then 'Aug'
		  when start_month = 9 then 'Sep'
		  when start_month = 10 then 'Oct'
		  when start_month = 11 then 'Nov'
		  when start_month = 12 then 'Dec'
		  else NULL
	end as month_new,
		  
  sum(case
	  	when keyword = 'diesel_emission' then datanumBase
	  	else 0 
	  end) as diesel_emission,
  sum(case
	  	when keyword = 'fo_emission' then datanumBase
	  	else 0 
	  end) as fo_emission,
  sum(case
	  	when keyword = 'natural_gas_emission' then datanumBase
	  	else 0 
	  end) as natural_gas_emission,
  sum(case
	  	when keyword = 'solvent_loss_dms_kgs_emission' then datanumBase
	  	else 0 
	  end) as dms_hexa_emission,
  sum(case
	  	when keyword = 'solvent_loss_edc_kgs_emission' then datanumBase
	  	else 0 
	  end) as edc_hexa_emission,
  sum(case
	  	when keyword = 'solvent_loss_dmf_kgs_emission' then datanumBase
	  	else 0 
	  end) as dmf_hexa_emission,
  sum(case
	  	when keyword = 'solvent_loss_methanol_kgs_emission' then datanumBase
	  	else 0 
	  end) as methanol_emission,
  sum(case
	  	when keyword = 'solvent_loss_mdcb_kgs_emission' then datanumBase
	  	else 0 
	  end) as mdcb_hexa_emission,
  sum(case
	  	when keyword = 'solvent_loss_odcb_kgs_emission' then datanumBase
	  	else 0 
	  end) as odcb_pekk_emission,
  sum(case
	  	when keyword = 'solvent_loss_hexane_kgs_emission' then datanumBase
	  	else 0 
	  end) as hexane_pekk_emission,
  sum(case
	  	when keyword = 'solvent_loss_dpo_kgs_emission' then datanumBase
	  	else 0 
	  end) as dpo_pekk_emission,
  sum(case
	  	when keyword = 'solvent_loss_methanol_kgs_emission_2' then datanumBase
	  	else 0 
	  end) as methanol_pekk_emission,
  sum(case
	  	when keyword = 'solvent_loss_xylidine_kgs_emission' then datanumBase
	  	else 0 
	  end) as xylidine_emission,
  sum(case
	  	when keyword = 'mdmpa_production_kg_emission' then datanumBase
	  	else 0 
	  end) as mdmpa_emission,
  sum(case
	  	when keyword = 'solvent_loss_dipa_kgs_emission' then datanumBase
	  	else 0 
	  end) as dipa_lambda_emission,
  sum(case
	  	when keyword = 'solvent_loss_toluene_kgs_emission_2' then datanumBase
	  	else 0 
	  end) as toluene_aceta_emission,
  sum(case
	  	when keyword = 'solvent_loss_hexane_kgs_emission_2' then datanumBase
	  	else 0 
	  end) as hexane_lambda_emission,
  sum(case
	  	when keyword = 'solvent_loss_xylene_kgs_emission' then datanumBase
	  	else 0 
	  end) as xylene_km_emission,
  sum(case
	  	when keyword = 'solvent_loss_tea_kgs_emission' then datanumBase
	  	else 0 
	  end) as tea_km_emission,
  sum(case
	  	when keyword = 'solvent_loss_toluene_kgs_emission' then datanumBase
	  	else 0 
	  end) as toluene_metco_emission,
  sum(case
	  	when keyword = 'solvent_loss_ech_kgs_emission' then datanumBase
	  	else 0 
	  end) as ech_metco_emission,
  sum(case
	  	when keyword = 'solvent_loss_heptane_kgs_emission' then datanumBase
	  	else 0 
	  end) as heptane_tvcp_emission,
  sum(case
	  	when keyword = 'solvent_loss_mdc_kgs_emission' then datanumBase
	  	else 0 
	  end) as mdc_metalaxyl_emission,
  sum(case
	  	when keyword = 'solvent_loss_mdc_kgs_emission_2' then datanumBase
	  	else 0 
	  end) as mdc_utility_emission,
  sum(case
	  	when keyword = 'paper_consumption_ream_emission' then datanumBase
	  	else 0 
	  end) as paper_emission,
  sum(case
	  	when keyword = 'enamal_paint_lit_emission' then datanumBase
	  	else 0 
	  end) as enamel_paint_emission,
  sum(case
	  	when keyword = 'company_vehicle_diesel_lit_emission' then datanumBase
	  	else 0 
	  end) as company_vehicle_diesel_emission,
  sum(case
	  	when keyword = 'company_vehicle_cng_kgs_emission' then datanumBase
	  	else 0 
	  end) as company_vehicle_cng_emission,
  sum(case
	  	when keyword = 'co2_emission_mt' then datanumBase
	  	else 0 
	  end) as electricity_emission,
  sum(case
	  	when keyword = 'shift_buses_diesel_lit_emission' then datanumBase
	  	else 0 
	  end) as shift_buses_diesel_emission,
  sum(case
	  	when keyword = 'shift_buses_cng_kgs_emission' then datanumBase
	  	else 0 
	  end) as shift_buses_cng_emission,
  sum(case
	  	when keyword = 'acetamiprid' then datanumBase
	  	else 0 
	  end) as acetamiprid,
  sum(case
	  	when keyword = 'total_techmt' then datanumBase
	  	else 0 
	  end) as total_techmt,
  sum(case
	  	when keyword = 'total_production' then datanumBase
	  	else 0 
	  end) as total_production,
  sum(case
	  	when keyword = 'water_cons_gidc_kl' then datanumBase
	  	else 0 
	  end) as water_cons_gidc,
  sum(case
	  	when keyword = 'water_constanker_kl' then datanumBase
	  	else 0 
	  end) as water_constanker,
  sum(case
	  	when keyword = 'electricitykwh' then datanum
	  	else 0 
	  end) as electricity,
  sum(case
	  	when keyword = 'hazardous_wastesolid_incinerated' then datanumBase
	  	else 0 
	  end) as hazardous_waste_solid,
  sum(case
	  	when keyword = 'land_fillmt' then datanumBase
	  	else 0 
	  end) as land_fill,
  sum(case
	  	when keyword = 'total_solvent_loss_mt' then datanumBase
	  	else 0 
	  end) as total_solvent_loss,
   sum(case
	  	when keyword = 'natural_gas_consumption' then datanumBase
	  	else 0 
	  end) as natural_gas_consumption,
   sum(case
	  	when keyword = 'total_renewable_energy_utilization' then datanum
	  	else 0 
	  end) as total_renewable_energy_utilization,
  
  (month_new||' ('||start_year||')') as month_year
  from sus_78682
  where name = 'Ankleshwar'
  group by name, fy_timerange, startdate),
  
sub2 as(
  select name, s1.fy_timerange, s1.month_year,

(s1.dms_hexa_emission + s1.edc_hexa_emission + s1.dmf_hexa_emission + s1.methanol_emission + s1.mdcb_hexa_emission + s1.odcb_pekk_emission + s1.hexane_pekk_emission + s1.dpo_pekk_emission + s1.methanol_pekk_emission + s1.xylidine_emission + s1.mdmpa_emission + s1.dipa_lambda_emission + s1.toluene_aceta_emission + s1.hexane_lambda_emission + s1.xylene_km_emission + s1.tea_km_emission + s1.toluene_metco_emission + s1.ech_metco_emission + s1.heptane_tvcp_emission + s1.mdc_metalaxyl_emission +
s1.mdc_utility_emission) as total_solvent_emission,

(s1.diesel_emission + s1.fo_emission + s1.natural_gas_emission + total_solvent_emission + s1.paper_emission + s1.enamel_paint_emission + s1.company_vehicle_diesel_emission + s1.company_vehicle_cng_emission) as scope1,

s1.electricity_emission as scope2,

(s1.shift_buses_diesel_emission	+ s1.shift_buses_cng_emission) as scope3,

(scope1 + scope2 + scope3) as total_co2_emission,

(s1.total_techmt - s1.acetamiprid) as tech_production,

(total_co2_emission / NULLIF(tech_production, 0)) as total_co2_tech_production,

(total_co2_emission / NULLIF(s1.total_production, 0)) as total_co2_total_production,

(s1.water_cons_gidc / NULLIF(s1.total_techmt, 0)) as water_tech_production,

((s1.water_cons_gidc + s1.water_constanker) / NULLIF(s1.total_production, 0)) as water_total_production,

((s1.electricity) / NULLIF(s1.total_production, 0)) as electricity_total_production,

((s1.hazardous_waste_solid + s1.land_fill) / NULLIF(s1.total_production, 0)) as hw_total_production,

(s1.total_solvent_loss / NULLIF(s1.total_production, 0)) as solvent_loss_total_production,

(s1.natural_gas_consumption / NULLIF(s1.total_production, 0)) as natural_gas_total_production,

(s1.total_renewable_energy_utilization) as total_renewable_energy_utilization	

from sub1 s1),

sub4 as(
  select name, fy_timerange, month_year, total_solvent_emission, scope1, scope2, scope3, total_co2_emission, total_co2_tech_production, total_co2_total_production, water_tech_production, water_total_production, electricity_total_production, hw_total_production, solvent_loss_total_production, natural_gas_total_production, total_renewable_energy_utilization from sub2),

temp as(
  select 'total_solvent_emission' as col
  union all
  select 'scope1' as col
  union all
  select 'scope2' as col
  union all
  select 'scope3' as col
  union all
  select 'total_co2_emission' as col
  union all
  select 'total_co2_tech_production' as col
  union all
  select 'total_co2_total_production' as col
  union all
  select 'water_tech_production' as col
  union all
  select 'water_total_production' as col
  union all
  select 'electricity_total_production' as col
  union all
  select 'hw_total_production' as col
  union all
  select 'solvent_loss_total_production' as col
  union all
  select 'natural_gas_total_production' as col
  union all
  select 'total_renewable_energy_utilization' as col)
  
select s4.name, s4.fy_timerange, s4.month_year, temp.col as dimensions,
sum(case col
		when 'total_solvent_emission' then round(s4.total_solvent_emission,2)
		when 'scope1' then round(s4.scope1,2)
		when 'scope2' then round(s4.scope2,2)
		when 'scope3' then round(s4.scope3,2)
		when 'total_co2_emission' then round(s4.total_co2_emission,2)
		when 'total_co2_tech_production' then round(s4.total_co2_tech_production,2)
		when 'total_co2_total_production' then round(s4.total_co2_total_production,2)
		when 'water_tech_production' then round(s4.water_tech_production,2)
		when 'water_total_production' then round(s4.water_total_production,2)
		when 'electricity_total_production' then round(s4.electricity_total_production,2)
		when 'hw_total_production' then round(s4.hw_total_production,2)
		when 'solvent_loss_total_production' then round(s4.solvent_loss_total_production,2)
		when 'natural_gas_total_production' then round(s4.natural_gas_total_production,2)
		when 'total_renewable_energy_utilization' then round(s4.total_renewable_energy_utilization,2)
	else null
end) as values
from sub4 s4
cross join temp
group by s4.name, s4.fy_timerange, s4.month_year, temp.col