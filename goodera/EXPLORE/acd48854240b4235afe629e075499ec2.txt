--WCP_Understand_function_total_respondents_endline_percent
with table1 as(select p.projectId from profile_16619 p

			   
left join profile_20703 p2
on p.projectId = p2.projectId
			   
group by p.projectId
),
table2 as(select p.projectId,fac.name as factory,nvl2(SUBSTRING(ven.name, 1, POSITION(' (' in ven.name)), SUBSTRING(ven.name, 1, POSITION(' (' in ven.name)), ven.name) as vendor_name, case when vendor_name='' then ven.name else vendor_name end as vendor,cou.name as country,case when country in ('India', 'Bangladesh', 'Sri Lanka')
then 'South Asia'
when country in ('China')
then 'North Asia'
when country in ('Guatemala', 'El Salvador', 'Dominican Republic')
then 'Americas'
when country in ('Philippines', 'Cambodia',  'Vietnam',  'Indonesia', 'Myanmar')
then 'South East Asia'
end as region,
case when p2.name_subunit is null or p2.name_subunit=' ' then 'N/A' when country='Bangladesh' then p2.name_subunit else 'N/A' end as unit,

decode(DATEPART(YEAR,p2.date_enrollment),null,0,DATEPART(YEAR,p2.date_enrollment)) as year_new,fun.name as function_1 from profile_20703 p

left join project_1137 fac
on p.projectid = fac.id
left join project_1137 ven
on fac.parent = ven.id
left join project_1137 cou
on ven.parent = cou.id

left join profile_16619 p2
on p.sub_unit = p2._id

left join table1 t1 on
p.projectId = t1.projectId
			   
left join tagelement_1137 fun
on p.function = fun.id

where  (cou.name <> 'Test Country' and cou.name <> 'GAP Inc.') and (p.projectId like '%%') and (t1.projectId is not null) and (p2.status = 1400365 or p2.status is null)
),
table3 as(SELECT * 
FROM (SELECT projectId,factory,vendor,country,region,year_new,unit,function_1,count(function_1) as total 
	  
	  from table2 
	  
	  

	 group by projectId,function_1,factory,vendor,country,region,year_new,unit)

PIVOT (
    SUM(total) FOR function_1 IN ('Do not understand at all' as dont,'Understand at a basic level' as basic_level, 'Understand very well' as very_well,'Not answered' as n_a)
)
),
table4 as(select projectId,factory,vendor,country,region,year_new,unit,case when dont is null then 0 else dont end as dont_count,
		  case when basic_level is null then 0 else basic_level end as basic_level_count,
		  case when very_well is null then 0 else very_well end as very_well_count,
		  case when n_a is null then 0 else n_a end as n_a_count,
		 (dont_count+basic_level_count+very_well_count+n_a_count) as total,
(dont_count*100.0)/total as dont_percent,
		(basic_level_count*100.0)/total as basic_level_percent,
		  (very_well_count*100.0)/total as very_well_percent,
		  
	(n_a_count*100.0)/total as not_answer_percent 
		  from table3
		  
),
temp as (
  select 'Do not understand at all' as dim
  union all
  select 'Understand at a basic level' as dim
  union all
  select 'Understand very well' as dim
  union all
  select 'Not answered' as dim
)
select  projectId,factory,vendor,country,region,year_new,unit,dont_count,basic_level_count,very_well_count,n_a_count,total,dont_percent,basic_level_percent,very_well_percent,not_answer_percent,temp.dim,case dim
	when 'Do not understand at all' then dont_percent 
	when 'Understand at a basic level' then basic_level_percent
	when 'Understand very well' then very_well_percent 
	when 'Not answered' then not_answer_percent

	Else Null
	End as value1,
	case dim
	when 'Do not understand at all' then 1 
	when 'Understand at a basic level' then 2
	when 'Understand very well' then 3 
	when 'Not answered' then 4

	Else Null
	End as sequence
	from table4
	cross join temp

group by projectId,factory,vendor,country,region,year_new,unit,dont_count,basic_level_count,very_well_count,n_a_count,total,temp.dim,dont_percent,basic_level_percent,very_well_percent,not_answer_percent


	  
	  

	 

