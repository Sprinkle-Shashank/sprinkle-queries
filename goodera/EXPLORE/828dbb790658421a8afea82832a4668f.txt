with temp1 as
(select projectId.name as projectId, indicator_1.name as indicator, sdgs.name as sdgs, schedule_vii.name as schedule_vii, m.ben_type, m.baseline, m.target, m.proj, r._id, r.project_name, r.vertical, focus.name as focus, state.name as state, r.district, r.direct_or_partner, r.project_code as project_code_new, r.start_date, site.name as site, q.createddate, q.completed, q.fy_timerange, q.progress, complete.name as complete, ben_type.name as ben_type, entity.name as entity, int_indi.name as int_indi,
 
 case
 when state.name is NULL then district
 else concat(district,concat(',',state.name))
 end as location, 
 
 concat(r.project_name, concat('-', r.project_code)) as concat_1 
 
 from profile_61044 as m

 left join profile_62881 AS r 
 on m.proj = r._id
 
 left join profile_55471 AS q 
 on r.project_code = q.project_code
 
/*left join profile_64961 AS l 
 on l.state = r.state*/
 
 left join ds_mysql_prod_tagelement as site
  on r.direct_or_partner = site.id
 
 left join ds_mysql_prod_tagelement as complete
  on q.completed = complete.id
 
 left join ds_mysql_prod_tagelement as ben_type
  on m.ben_type = ben_type.id
 
 left join ds_mysql_prod_tagelement as indicator_1
  on m.indicator = indicator_1.id 
 
 left join ds_mysql_prod_tagelement as int_indi
  on indicator_1.parent = int_indi.id
 
 left join ds_mysql_prod_project as projectId
  on m.projectId = projectId.id 
 
 left join ds_mysql_prod_tagelement as schedule_vii
  on m.schedule_vii = schedule_vii.id 
 
 left join ds_mysql_prod_tagelement as focus
  on r.focus = focus.id 
 
 left join ds_mysql_prod_tagelement as entity
  on r.entity = entity.id 
 
 left join ds_mysql_prod_tagelement as state
  on r.state = state.id 
 
 left join ds_mysql_prod_tagelement as sdgs
  on m.sdgs = sdgs.id 
 
 where r.direct_or_partner = 1132990 AND q.completed = 939857),
   
 temp2 as
 (select m.projectId, m.indicator, m.schedule_vii, m.focus, m.fy_timerange, m.entity, m.vertical,  m.state,  m.target, m.sdgs, vertical_new, m._id, m.int_indi, m.project_code_new, m.createddate, m.progress, m.location, concat_1
 from temp1 as m, m.vertical vertical_new),
 
 temp3 as
 (select m.projectId, m.indicator, m.schedule_vii, m.focus, m.fy_timerange, m.entity, m.state, m.sdgs, m.target, m.int_indi, m._id , m.project_code_new, m.createddate, m.progress, m.location, concat_1 ,
  
   case 
when vert1.name IS NULL AND vert.name IS NOT NULL THEN vert.name
else vert1.name 
END AS vertical

from temp2 AS m

left join ds_mysql_prod_tagelement as vert
  on m.vertical_new = vert.id
  
left join ds_mysql_prod_tagelement as vert1
  on vert.parent = vert1.id),
  
  temp4 as
 (select m.projectId, m.indicator, m.schedule_vii, m.focus, m.fy_timerange, m.entity, m.state, m.sdgs, m.vertical, m._id, SUM(m.target) as beneficiary, m.int_indi, m.project_code_new, m.createddate, m.progress, m.location, concat_1
  from temp1 as m
  where _id NOT IN (select _id from temp2)
  group by m.projectId, m.indicator, m.schedule_vii, m.focus, m.fy_timerange, m.entity, m.state, m.sdgs, m.vertical, m._id, m.int_indi, m.project_code_new, m.createddate, m.progress, m.location, concat_1 ),
  
  temp5 as
  (
  select projectId, indicator, schedule_vii, focus, project_code_new, fy_timerange, entity, SUM(m.target) as beneficiary, vertical, int_indi, state, sdgs , _id , createddate, progress, m.location, concat_1 
  from temp3 as m
  group by projectId, indicator, schedule_vii, focus, project_code_new, fy_timerange, entity, vertical, int_indi, state, sdgs , _id, createddate, progress, m.location, concat_1
  ),
  
  temp6 as
  (
  select projectId, indicator, schedule_vii, focus, project_code_new, fy_timerange, entity, beneficiary, vertical, int_indi, state, sdgs , _id , createddate, progress, m.location, concat_1, q
  from temp4 as m, m.vertical as q
   ),
   
   temp7 as
   (
	 select projectId, indicator, schedule_vii, focus, project_code_new, fy_timerange, entity, beneficiary, int_indi, state, sdgs , _id, createddate, progress, m.location, concat_1,
	 
case 
when vert1.name IS NULL AND vert.name IS NOT NULL THEN vert.name
else vert1.name 
END AS vertical
 
from temp6 as m

left join ds_mysql_prod_tagelement as vert
on m.q = vert.id
  
left join ds_mysql_prod_tagelement as vert1
on vert.parent = vert1.id)
	  
   
   select * from temp5
   UNION ALL
   select * from temp6
