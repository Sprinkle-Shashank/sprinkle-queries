with table1 as (Select
				JSON_SERIALIZE(table_52810.pace_brands) as pace_brand,	
				case when pace_brand like '%1011796%' then 1 else 0 end as brand,
				case when table_54646._id is not null then 1 else 0 end as status,
				case when (lg_status = 8484007 or lg_status is null or len(lg_status)<1) then 1 else 0 end as lg,
				p._id as id1,
				
				table_54646.projid_factory as factory_id,
				--table_54646.projid_vendor as vendor_id,
				(turnover) as turnover,
				(absenteeism) as absenteeism,
				(promotions) as promotions,
				(efficiency) as efficiency,
				(turnover_1) as turnover_1,
				(absenteeism_1) as absenteeism_1,
				(promotions_1) as promotions_1,
				(efficiency_1) as efficiency_1,
				table_54646.name_factory as name_factory,
				table_54646.name_vendor_filter),',') as name_vendor_filter,
				table_54646.name_country as name_country,
				p.start_date as start_date, 
				p.projectId as projectId1,
				case when table_52810.offset_date is null then '2020-02-01T00:00:00.000Z' else table_52810.offset_date end as offset_date1
				
				from profile_4227 p

left join profile_52810 table_52810 on
table_52810.projectId = p.projectId

left join profile_54646 table_54646 on
table_54646.projectId = p.projectId

where brand = 1 and status = 1 and lg = 1 and start_date >= offset_date1

)

Select avg(turnover) as avg_pace_turnover,
				avg(absenteeism) as avg_pace_absent,
				avg(promotions) as avg_pace_promo,
				avg(efficiency) as avg_pace_eff,
				avg(turnover_1) as avg_non_pace_turnover,
				avg(absenteeism_1) as avg_non_pace_absent,
				avg(promotions_1) as avg_non_pace_promo,
				avg(efficiency_1) as avg_non_pace_eff,
				listagg(distinct(name_factory),',') as factory,
				listagg(distinct(name_vendor_filter),',') as factoryBelongsTo,
				listagg(distinct(name_country),',') as country, factory_id,p.start_date, projectId1 as projectId, id1 as id  from table1 p 
group by factory_id, projectId, start_date, id