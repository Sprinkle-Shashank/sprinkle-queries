with table1 as
( select p._id, projectId.name as projectId, p.month_timerange as fy_timerange, p.amount, p.project_code_new, q.project_name, q.vertical, focus.name as focus, q.state, q.start_date, q.direct_or_partner, q.partner, q.district, q.project_code as project_code_new1 , q.entity ,  z.createddate as created, z.completed, progress.name as progress , state_name.name as state_name_update, 
 
 case when z.completed = 939857 then 'Completed' else progress.name end as progress_update from profile_55194 as p 
 
 left join profile_62881 q 
 on p.project_code_new = q._id
 
 left join ds_mysql_prod_project as projectId
  on p.projectId = projectId.id 
 
 left join ds_mysql_prod_tagelement as state_name
  on q.state = state_name.id
 
 left join ds_mysql_prod_tagelement as focus
  on q.focus = focus.id
 
 left join profile_55471 z 
 on q.project_code = z.project_code
 
 left join ds_mysql_prod_tagelement as progress
  on z.progress = progress.id
  
 where p.month_timerange IS NOT NULL
 ),
 
 
 table2 as 
 ( 
   select  projectId, project_name , sum(amount) as disbursed, fy_timerange , vertical, focus, partner, district, project_code_new1 , entity , completed.name as completed, p.created, progress , state_name_update, progress_update, direct_or_partner from table1 as p
   
  left join ds_mysql_prod_tagelement as completed
  on p.completed = completed.id
   
   group by projectId, project_name , fy_timerange , vertical, focus, partner, district, project_code_new1, entity , completed.name, p.created, progress , state_name_update, progress_update, direct_or_partner
  ),
  
  table3 as
  ( 
   select p.projectId, project_name , disbursed, fy_timerange , vertical, focus, partner, district, project_code_new1 , entity ,  p.created, completed, progress , vertical_new , state_name_update, progress_update, direct_or_partner from table2 as p , p.vertical as vertical_new
   ),
   
   
   table4 as
   ( 
	 select projectId, project_name , disbursed, fy_timerange , focus, district, project_code_new1 , ent.name as entity , completed, p.created, progress , direct_or_partner,  case 
when vert1.name IS NULL AND vert.name IS NOT NULL THEN vert.name
else vert1.name 
END AS vertical , state_name_update , vert1.name as vertical1 , vert.name as  vertical2 , vertical2 as partner , case
 when district is NULL then state_name_update
 else district
 end as district_update, case when district_update=state_name_update then state_name_update else concat(district_update,concat(' , ',state_name_update)) end as location_update, progress_update from table3 as p
	
left join ds_mysql_prod_tagelement as vert
  on p.vertical_new = vert.id
  
left join ds_mysql_prod_tagelement as vert1
  on vert.parent = vert1.id 
	 
left join ds_mysql_prod_tagelement ent
  on p.entity = ent.id 
	 ),
	 
	 table5 as
	 ( 
	   select projectId, project_name , sum(disbursed) as disbursed , fy_timerange , focus,  project_code_new1 , entity ,  p.created, progress , completed,
 vertical , vertical2 as unit, partner ,  location_update, progress_update, 
	   
	   case when direct_or_partner IS NULL then '-'
	   when direct_or_partner = 1132990 then vertical2 
	   else partner
	   end as partner_unit
	   from table4 as p
	   
	   group by  projectId, project_name , fy_timerange , focus, project_code_new1 , entity ,  p.created, progress , completed,
 vertical , partner_unit , vertical2,  location_update, progress_update

	   order by project_code_new1 asc, p.created desc, progress desc
 )
 
 
 
select * from table5
