with table1 as ( select
			JSON_SERIALIZE(table_52810.pace_brands) as pace_brand,	
			case when pace_brand like '%1151834%' then 1 else 0 end  as brand
				/*,
  			case when lg_status !=848008 then 1 else 0 end as status,
			case when table_54646.projectId is null then 0 else 1 end as status1,
			substring(table_54646.projcode_factory,1,1) as code,
			
			case when table_52810.offset_date is null then '2020-02-01T00:00:00.000Z' else table_52810.offset_date end as offset_date,
				p.start_date as start_date1,
		--case when start_date1 > offset_date then 1 else 0 end as token,
			sum(num_females) as total_females,
			sum(num_females_graduated) as total_females_graduated,
			sum(num_females_dropout) as total_females_dropout,
			case when end_date_2 is null  then num_females else 0 end as ongoing,
			
			case when end_date_2 is null then 1 else 0 end as batchongoing,
			
			--case when data_type(end_date_2) = date then 1 else 0 end as batchcomp,
			--sum(batchcomp) as total_batches_completed,
			avg(hours) as average_hours,
			sum(hours) as total_hours,
			sum(num_males) as total_males,
			case when end_date_2 is null then num_males else 0 end as mongoing,	
			
			sum(num_males_graduated) as total_males_graduated,
			sum(num_males_dropout) as total_males_dropout,
			sum(reason_pregnancy) as dropout_pregnancy,
			sum(reason_left) as dropout_left,
			sum(reason_interest) as dropout_interest,
			sum(reason_pressure) as dropout_pressure,
			sum(reason_other) as dropout_other,
			case when end_date_2 is null  then 0 else num_females end as fcomp
				*/
			from profile_4227 p
  	
				
join profile_54646 table_54646 on
table_54646.projectId = p.projectId		

inner join profile_52810 table_52810 on
table_52810.projectId = p.projectId)
/*
group by p.lg_status,table_54646.projectId,table_52810.pace_brands,table_54646.projcode_factory,table_52810.offset_date,p.start_date,p.end_date_2,p.num_females,p.num_males
),
table2 as ( select
		   status,
		   brand,
		   sum(total_females_dropout) as total_females_dropout,
		   status1,
		   --token,
		   sum(total_females) as total_females,
		   sum(total_females_graduated) as total_females_graduated,
		   sum(ongoing) as total_females_ongoing,
		   sum(batchongoing) as total_batches_ongoing,
		   avg(average_hours) as average_hours ,
		   sum(total_hours) as total_hours,
		   sum(total_males) as total_males,
		   sum(mongoing) as total_males_ongoing,
		   sum(total_males_graduated) as total_males_graduated,
		   sum(total_males_dropout) as total_males_dropout,
		   sum(dropout_pregnancy) as dropout_pregnancy,
		   sum(dropout_left) as dropout_left,
		   sum(dropout_interest) as dropout_interest,
		   sum(dropout_pressure) as dropout_pressure,
		   sum(dropout_other) as dropout_other,
		   sum(fcomp) as total_females_completed,
			
		   case when start_date1 > offset_date then 1 else 0 end as token,
		   pace_brand

		from table1 p
group by status,brand,status1,token
		   ,p.pace_brand
) 
select * from table2 p where status = 1 
and status1 = 1 
--and brand = 1 
and token = 1*/
select * from table1 p where brand