drop table if exists RB_Individual_Vol_Hours;
create table RB_Individual_Vol_Hours as

with sub1 as(
  select p1.id as event_id, p2.startdate as start_date, nvl(p2.enddate, p2.startdate) as end_date, INITCAP(p2.countryname) as country, p4.created as participation_date, cast(p4.duration as float) as duration, p1.opportunityType, y1.partnername
from ds_mysql_prod_empOpportunity p1
  
LEFT JOIN ds_mysql_prod_empVolunteeringOpportunity p2 ON p2.empOpportunityId = p1.id
LEFT JOIN ds_mysql_prod_empVolunteeringApplication p3 ON p3.empVolunteeringOpportunityId = p2.id
LEFT JOIN ds_mysql_prod_empVolunteeringParticipation p4 ON p4.empVolunteeringApplicationId = p3.id
LEFT JOIN ds_mysql_prod_orgpartner y1 on y1.id = p1.orgpartnerid
  
where 
  UPPER(p1.opportunityType) = 'VOL' and p1.securityContextId = 1615 and 
  p4.active = 1 and p1.active = 1 and 
  p4.duration != 0 and p4.duration is not null),

sub2 as(
  select p5.id as event_id, p6.created as start_date, p6.created as end_date, 
(cast(p6.timetaken as float)/60) as duration, cast(NULL as varchar) as country, p7.created as participation_date, p5.opportunityType, y2.partnername
from ds_mysql_prod_empOpportunity p5
  
LEFT JOIN ds_mysql_prod_empMicroOpportunity p6 ON p6.empOpportunityId = p5.id
LEFT JOIN ds_mysql_prod_empMicroContributor p7 ON p7.empMicroOpportunityId = p6.id 
LEFT JOIN ds_mysql_prod_orgpartner y2 on y2.id = p5.orgpartnerid
  
where 
  UPPER(p5.opportunityType) = 'MIC' and p5.securityContextId = 1615 and 
  p5.active = 1 and p7.active = 1 and 
  p6.timetaken is not null and p6.timetaken != 0),

sub3 as(
  select event_id, start_date, participation_date, end_date, country, duration, opportunityType, partnername
from sub1
	UNION ALL
  select event_id, start_date, participation_date, end_date, country, duration, opportunityType, partnername
from sub2),

sub4 as(
  select s3.event_id, nvl(p9.name, 'Others') as focus_area, s3.opportunityType,
nvl(s3.country, INITCAP(p10.country), 'Global') as country, s3.duration, s3.partnername,
  
cast(timestamp 'epoch' + CAST(s3.start_date AS BIGINT)/1000 * interval '1 second' as date) as start_date,
cast(timestamp 'epoch' + CAST(s3.end_date AS BIGINT)/1000 * interval '1 second' as date) as end_date,
cast(timestamp 'epoch' + CAST(s3.participation_date AS BIGINT)/1000 * interval '1 second' as date) as participation_date
  
 
from sub3 s3
LEFT JOIN ds_mysql_prod_empOpportunityFocusArea p8 ON p8.empOpportunityId = s3.event_id
LEFT JOIN ds_mysql_prod_refFocusArea p9 ON p9.id = p8.focusArea
LEFT JOIN ds_mysql_prod_empOpportunityVisibility p10 ON p10.empOpportunityId = s3.event_id),

sub5 as(
  select s4.event_id, s4.start_date, s4.participation_date, s4.end_date, s4.country, s4.focus_area, s4.opportunityType, s4.partnername, sum(s4.duration) as vol_hours
from sub4 s4
group by s4.event_id, s4.start_date, s4.participation_date, s4.end_date, s4.country, s4.focus_area, s4.opportunityType, s4.partnername),

---x------ FLOW ---x------

sub6 as(
  select s5.*, 
  case
    when extract(year from s5.end_date) > extract(year from s5.start_date) then s5.participation_date
  	else s5.start_date
  end as start_date_new
from sub5 s5)

select s6.event_id, z1.name as country, s6.partnername, s6.participation_date, s6.vol_hours, (s6.vol_hours * z2.vol_conversion_factor) as volunteering_cost,

(s6.start_date_new || '|' || s6.start_date_new) as fy_timerange

from sub6 s6

LEFT JOIN profile_78788 z1 on z1.vol_country = s6.country
LEFT JOIN profile_78933 z2 on z2.name = extract(year from s6.start_date_new)

where s6.partnername is not null